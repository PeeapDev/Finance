(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[99],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/assets/edit.vue?vue&type=script&lang=js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/assets/edit.vue?vue&type=script&lang=js ***!
  \****************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vuex */ \"./node_modules/vuex/dist/vuex.esm.js\");\n/* harmony import */ var vform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vform */ \"./node_modules/vform/dist/vform.es.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  middleware: ['auth', 'check-permissions'],\n  metaInfo: function metaInfo() {\n    return {\n      title: this.$t('Edit Asset')\n    };\n  },\n  data: function data() {\n    return {\n      breadcrumbsCurrent: 'Edit Asset',\n      breadcrumbs: [{\n        name: 'Dashboard',\n        url: 'home'\n      }, {\n        name: 'Assets',\n        url: 'assets.index'\n      }, {\n        name: 'Edit',\n        url: ''\n      }],\n      form: new vform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n        name: '',\n        assetCost: '',\n        assetType: null,\n        depreciation: 0,\n        salvageValue: 0,\n        usefulLife: 0,\n        depreciationExpense: '',\n        depreciationType: 'Year',\n        image: '',\n        date: new Date().toISOString().slice(0, 10),\n        note: '',\n        status: 1\n      }),\n      loading: true,\n      url: null\n    };\n  },\n  computed: _objectSpread({}, Object(vuex__WEBPACK_IMPORTED_MODULE_0__[\"mapGetters\"])('operations', ['items'])),\n  created: function created() {\n    this.getAsset();\n    this.getTypes();\n  },\n  methods: {\n    // get all types\n    getTypes: function getTypes() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.n = 1;\n              return _this.$store.dispatch('operations/allData', {\n                path: '/api/all-asset-types'\n              });\n            case 1:\n              return _context.a(2);\n          }\n        }, _callee);\n      }))();\n    },\n    // get asset\n    getAsset: function getAsset() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _yield$axios$get, data;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.n = 1;\n              return axios__WEBPACK_IMPORTED_MODULE_2___default.a.get(window.location.origin + '/api/assets/' + _this2.$route.params.slug);\n            case 1:\n              _yield$axios$get = _context2.v;\n              data = _yield$axios$get.data;\n              _this2.form.name = data.data.name;\n              _this2.form.assetCost = data.data.amount;\n              _this2.form.note = data.data.note;\n              _this2.form.status = data.data.status;\n              _this2.form.assetType = data.data.type;\n              _this2.form.date = data.data.date;\n              _this2.form.depreciation = data.data.depreciation;\n              _this2.form.salvageValue = data.data.salvageValue > 0 ? data.data.salvageValue : 0;\n              _this2.form.usefulLife = data.data.usefulLife;\n              _this2.form.depreciationType = data.data.depreciationType == 1 ? 'Year' : 'Month';\n              _this2.form.depreciationExpense = data.data.depreciationExpenseTxt;\n              _this2.url = data.data.image;\n            case 2:\n              return _context2.a(2);\n          }\n        }, _callee2);\n      }))();\n    },\n    // calculate depreciation expense\n    calculateDepreciationExpense: function calculateDepreciationExpense() {\n      if (this.form.depreciation == 1 && this.form.assetCost && this.form.usefulLife) {\n        var depreciationExpense = (this.form.assetCost - this.form.salvageValue) / this.form.usefulLife;\n        return this.form.depreciationExpense = depreciationExpense + ' Per ' + this.form.depreciationType;\n      }\n      return;\n    },\n    // vue file upload\n    onFileChange: function onFileChange(e) {\n      var _this3 = this;\n      var file = e.target.files[0];\n      var reader = new FileReader();\n      if (file.size < 2111775 && (file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/gif')) {\n        reader.onloadend = function (file) {\n          _this3.form.image = reader.result;\n        };\n        reader.readAsDataURL(file);\n        this.url = URL.createObjectURL(file);\n      } else {\n        Swal.fire(this.$t('Error!'), this.$t('Please select a valid thumbnail with size less than 2 MB'), 'error');\n      }\n    },\n    // update asset\n    updateAsset: function updateAsset() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _context3.n = 1;\n              return _this4.form.patch(window.location.origin + '/api/assets/' + _this4.$route.params.slug).then(function (response) {\n                toast.fire({\n                  type: 'success',\n                  title: _this4.$t('Asset updated successfully')\n                });\n                _this4.$router.push({\n                  name: 'assets.index'\n                });\n              })[\"catch\"](function () {\n                toast.fire({\n                  type: 'error',\n                  title: _this4.$t('Opps...something went wrong')\n                });\n              });\n            case 1:\n              return _context3.a(2);\n          }\n        }, _callee3);\n      }))();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/assets/edit.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/assets/edit.vue?vue&type=template&id=d3174986&scoped=true":
/*!**************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/assets/edit.vue?vue&type=template&id=d3174986&scoped=true ***!
  \**************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", [_c(\"breadcrumbs\", {\n    attrs: {\n      items: _vm.breadcrumbs,\n      current: _vm.breadcrumbsCurrent\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"col-lg-12\"\n  }, [_c(\"div\", {\n    staticClass: \"card\"\n  }, [_c(\"div\", {\n    staticClass: \"card-header\"\n  }, [_c(\"h3\", {\n    staticClass: \"card-title\"\n  }, [_vm._v(_vm._s(_vm.$t(\"Edit asset\")))]), _vm._v(\" \"), _c(\"router-link\", {\n    staticClass: \"btn btn-dark float-right\",\n    attrs: {\n      to: {\n        name: \"assets.index\"\n      }\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-long-arrow-alt-left\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"Back\")) + \"\\n          \")])], 1), _vm._v(\" \"), _c(\"form\", {\n    attrs: {\n      role: \"form\",\n      enctype: \"multipart/form-data\"\n    },\n    on: {\n      submit: function submit($event) {\n        $event.preventDefault();\n        return _vm.updateAsset.apply(null, arguments);\n      },\n      keydown: function keydown($event) {\n        return _vm.form.onKeydown($event);\n      }\n    }\n  }, [_c(\"div\", {\n    staticClass: \"card-body\"\n  }, [_c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"name\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Asset Name\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.name,\n      expression: \"form.name\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"name\")\n    },\n    attrs: {\n      id: \"name\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: _vm.$t(\"Enter asset name\")\n    },\n    domProps: {\n      value: _vm.form.name\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"name\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"name\"\n    }\n  })], 1), _vm._v(\" \"), _vm.items ? _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"assetType\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Asset Type\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"assetType\")\n    },\n    attrs: {\n      options: _vm.items,\n      label: \"name\",\n      name: \"assetType\",\n      placeholder: _vm.$t(\"Select an asset type\")\n    },\n    model: {\n      value: _vm.form.assetType,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"assetType\", $$v);\n      },\n      expression: \"form.assetType\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"assetType\"\n    }\n  })], 1) : _vm._e()]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"assetCost\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Asset Cost\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.assetCost,\n      expression: \"form.assetCost\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"assetCost\")\n    },\n    attrs: {\n      id: \"assetCost\",\n      type: \"number\",\n      name: \"assetCost\",\n      placeholder: _vm.$t(\"Enter asset cost\")\n    },\n    domProps: {\n      value: _vm.form.assetCost\n    },\n    on: {\n      change: _vm.calculateDepreciationExpense,\n      keyup: _vm.calculateDepreciationExpense,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"assetCost\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"assetCost\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"depreciation\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Depreciation\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"select\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.depreciation,\n      expression: \"form.depreciation\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"depreciation\")\n    },\n    attrs: {\n      id: \"depreciation\"\n    },\n    on: {\n      change: function change($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.form, \"depreciation\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }\n    }\n  }, [_c(\"option\", {\n    attrs: {\n      value: \"1\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Yes\")))]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"0\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"No\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"depreciation\"\n    }\n  })], 1)]), _vm._v(\" \"), _vm.form.depreciation == 1 ? _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"depreciationType\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Depreciation Type\")))]), _vm._v(\" \"), _c(\"select\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.depreciationType,\n      expression: \"form.depreciationType\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"depreciationType\")\n    },\n    attrs: {\n      id: \"depreciationType\"\n    },\n    on: {\n      change: [function ($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.form, \"depreciationType\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }, _vm.calculateDepreciationExpense]\n    }\n  }, [_c(\"option\", {\n    attrs: {\n      value: \"Month\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Monthly\")))]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"Year\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Yearly\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"depreciationType\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"salvageValue\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Salvage Value\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.salvageValue,\n      expression: \"form.salvageValue\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"salvageValue\")\n    },\n    attrs: {\n      id: \"salvageValue\",\n      type: \"number\",\n      name: \"salvageValue\",\n      placeholder: _vm.$t(\"Salvage Value\")\n    },\n    domProps: {\n      value: _vm.form.salvageValue\n    },\n    on: {\n      change: _vm.calculateDepreciationExpense,\n      keyup: _vm.calculateDepreciationExpense,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"salvageValue\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"salvageValue\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"usefulLife\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Useful Life\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.usefulLife,\n      expression: \"form.usefulLife\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"usefulLife\")\n    },\n    attrs: {\n      id: \"usefulLife\",\n      type: \"number\",\n      name: \"usefulLife\",\n      placeholder: _vm.$t(\"Enter useful life\")\n    },\n    domProps: {\n      value: _vm.form.usefulLife\n    },\n    on: {\n      change: _vm.calculateDepreciationExpense,\n      keyup: _vm.calculateDepreciationExpense,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"usefulLife\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"usefulLife\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"depreciationExpense\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Depreciation\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.depreciationExpense,\n      expression: \"form.depreciationExpense\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      id: \"depreciationExpense\",\n      type: \"text\",\n      name: \"depreciationExpense\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.depreciationExpense\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"depreciationExpense\", $event.target.value);\n      }\n    }\n  })])]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"note\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Note\")))]), _vm._v(\" \"), _c(\"textarea\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.note,\n      expression: \"form.note\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"note\")\n    },\n    attrs: {\n      id: \"note\",\n      placeholder: _vm.$t(\"Write your note here!\")\n    },\n    domProps: {\n      value: _vm.form.note\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"note\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"note\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"date\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Date\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.date,\n      expression: \"form.date\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"date\")\n    },\n    attrs: {\n      id: \"date\",\n      type: \"date\",\n      name: \"date\"\n    },\n    domProps: {\n      value: _vm.form.date\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"date\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"date\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"status\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Status\")))]), _vm._v(\" \"), _c(\"select\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.status,\n      expression: \"form.status\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"status\")\n    },\n    attrs: {\n      id: \"status\"\n    },\n    on: {\n      change: function change($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.form, \"status\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }\n    }\n  }, [_c(\"option\", {\n    attrs: {\n      value: \"1\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Active\")))]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"0\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Inactive\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"status\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"image\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Image\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"custom-file\"\n  }, [_c(\"input\", {\n    staticClass: \"custom-file-input\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"image\")\n    },\n    attrs: {\n      id: \"image\",\n      type: \"file\",\n      name: \"image\"\n    },\n    on: {\n      change: _vm.onFileChange\n    }\n  }), _vm._v(\" \"), _c(\"label\", {\n    staticClass: \"custom-file-label\",\n    attrs: {\n      \"for\": \"image\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Choose file\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"image\"\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bg-light mt-4 w-25\"\n  }, [_vm.url ? _c(\"img\", {\n    staticClass: \"img-fluid\",\n    attrs: {\n      src: _vm.url,\n      alt: _vm.$t(\"Attached Image\")\n    }\n  }) : _vm._e()])], 1)])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"card-footer\"\n  }, [_c(\"v-button\", {\n    staticClass: \"btn btn-primary\",\n    attrs: {\n      loading: _vm.form.busy\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-edit\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"Save changes\")) + \"\\n            \")]), _vm._v(\" \"), _c(\"button\", {\n    staticClass: \"btn btn-secondary float-right\",\n    attrs: {\n      type: \"reset\"\n    },\n    on: {\n      click: function click($event) {\n        return _vm.form.reset();\n      }\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-power-off\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"Reset\")) + \"\\n            \")])], 1)])])])])], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/assets/edit.vue?vue&type=template&id=d3174986&scoped=true\n");

/***/ }),

/***/ "./resources/js/pages/assets/edit.vue":
/*!********************************************!*\
  !*** ./resources/js/pages/assets/edit.vue ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _edit_vue_vue_type_template_id_d3174986_scoped_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./edit.vue?vue&type=template&id=d3174986&scoped=true */ \"./resources/js/pages/assets/edit.vue?vue&type=template&id=d3174986&scoped=true\");\n/* harmony import */ var _edit_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./edit.vue?vue&type=script&lang=js */ \"./resources/js/pages/assets/edit.vue?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _edit_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _edit_vue_vue_type_template_id_d3174986_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _edit_vue_vue_type_template_id_d3174986_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"d3174986\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"resources/js/pages/assets/edit.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvYXNzZXRzL2VkaXQudnVlPzhhYzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBOEY7QUFDdkM7QUFDTDs7O0FBR2xEO0FBQ2dHO0FBQ2hHLGdCQUFnQiwyR0FBVTtBQUMxQixFQUFFLHlFQUFNO0FBQ1IsRUFBRSwwRkFBTTtBQUNSLEVBQUUsbUdBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxJQUFJLEtBQVUsRUFBRSxZQWlCZjtBQUNEO0FBQ2UsZ0YiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvYXNzZXRzL2VkaXQudnVlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9lZGl0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1kMzE3NDk4NiZzY29wZWQ9dHJ1ZVwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2VkaXQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL2VkaXQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcImQzMTc0OTg2XCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiL1VzZXJzL21vaGFtZWRhYmR1bGthYmlhL0Rlc2t0b3AvRmluYW5jZS9maW5haWNlL25vZGVfbW9kdWxlcy92dWUtaG90LXJlbG9hZC1hcGkvZGlzdC9pbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJ2QzMTc0OTg2JykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJ2QzMTc0OTg2JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJ2QzMTc0OTg2JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9lZGl0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1kMzE3NDk4NiZzY29wZWQ9dHJ1ZVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJ2QzMTc0OTg2Jywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJyZXNvdXJjZXMvanMvcGFnZXMvYXNzZXRzL2VkaXQudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/pages/assets/edit.vue\n");

/***/ }),

/***/ "./resources/js/pages/assets/edit.vue?vue&type=script&lang=js":
/*!********************************************************************!*\
  !*** ./resources/js/pages/assets/edit.vue?vue&type=script&lang=js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./edit.vue?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/assets/edit.vue?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvYXNzZXRzL2VkaXQudnVlPzhiZDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBLHdDQUF5TCxDQUFnQiwrT0FBRyxFQUFDIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL3BhZ2VzL2Fzc2V0cy9lZGl0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNC0wIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZWRpdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS00LTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9lZGl0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/pages/assets/edit.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./resources/js/pages/assets/edit.vue?vue&type=template&id=d3174986&scoped=true":
/*!**************************************************************************************!*\
  !*** ./resources/js/pages/assets/edit.vue?vue&type=template&id=d3174986&scoped=true ***!
  \**************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_template_id_d3174986_scoped_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../node_modules/vue-loader/lib??vue-loader-options!./edit.vue?vue&type=template&id=d3174986&scoped=true */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/assets/edit.vue?vue&type=template&id=d3174986&scoped=true\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_template_id_d3174986_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_template_id_d3174986_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvYXNzZXRzL2VkaXQudnVlP2YwZTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL3BhZ2VzL2Fzc2V0cy9lZGl0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1kMzE3NDk4NiZzY29wZWQ9dHJ1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTQtMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/cmVmLS02IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZWRpdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9ZDMxNzQ5ODYmc2NvcGVkPXRydWVcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/pages/assets/edit.vue?vue&type=template&id=d3174986&scoped=true\n");

/***/ })

}]);