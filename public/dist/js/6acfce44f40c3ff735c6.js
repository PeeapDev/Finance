(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[143],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/payroll/create.vue?vue&type=script&lang=js":
/*!*******************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/payroll/create.vue?vue&type=script&lang=js ***!
  \*******************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vuex */ \"./node_modules/vuex/dist/vuex.esm.js\");\n/* harmony import */ var vform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vform */ \"./node_modules/vform/dist/vform.es.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  middleware: ['auth', 'check-permissions'],\n  metaInfo: function metaInfo() {\n    return {\n      title: this.$t('Create Payroll')\n    };\n  },\n  data: function data() {\n    return {\n      breadcrumbsCurrent: 'Create Payroll',\n      breadcrumbs: [{\n        name: 'Dashboard',\n        url: 'home'\n      }, {\n        name: 'Payroll',\n        url: 'payroll.index'\n      }, {\n        name: 'Create',\n        url: ''\n      }],\n      form: new vform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n        chequeNo: '',\n        salaryMonth: '',\n        employee: '',\n        account: '',\n        availableBalance: 0,\n        presentSalary: '',\n        deductionAmount: '',\n        deductionReason: '',\n        mobileBill: '',\n        foodBill: '',\n        bonus: '',\n        commission: '',\n        advance: '',\n        festivalBonus: '',\n        travelAllowance: '',\n        others: '',\n        totalSalary: '',\n        salaryDate: new Date().toISOString().slice(0, 10),\n        status: 1,\n        note: '',\n        image: ''\n      }),\n      url: null,\n      accounts: ''\n    };\n  },\n  computed: _objectSpread({}, Object(vuex__WEBPACK_IMPORTED_MODULE_0__[\"mapGetters\"])('operations', ['items', 'appInfo'])),\n  created: function created() {\n    this.getEmployees();\n    this.getAccounts();\n  },\n  methods: {\n    // get all employees\n    getEmployees: function getEmployees() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.n = 1;\n              return _this.$store.dispatch('operations/allData', {\n                path: '/api/all-employees'\n              });\n            case 1:\n              return _context.a(2);\n          }\n        }, _callee);\n      }))();\n    },\n    // get accounts\n    getAccounts: function getAccounts() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _yield$axios$get, data, defaultAccountSlug;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.n = 1;\n              return axios__WEBPACK_IMPORTED_MODULE_2___default.a.get(window.location.origin + '/api/all-accounts');\n            case 1:\n              _yield$axios$get = _context2.v;\n              data = _yield$axios$get.data;\n              _this2.accounts = data.data;\n              // assign default account\n              if (_this2.accounts && _this2.accounts.length > 0) {\n                defaultAccountSlug = _this2.appInfo.defaultAccountSlug;\n                _this2.form.account = _this2.accounts.find(function (account) {\n                  return account.slug == defaultAccountSlug;\n                });\n                _this2.updateBalance();\n              }\n            case 2:\n              return _context2.a(2);\n          }\n        }, _callee2);\n      }))();\n    },\n    // vue file upload\n    onFileChange: function onFileChange(e) {\n      var _this3 = this;\n      var file = e.target.files[0];\n      var reader = new FileReader();\n      if (file.size < 2111775 && (file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/gif')) {\n        reader.onloadend = function (file) {\n          _this3.form.image = reader.result;\n        };\n        reader.readAsDataURL(file);\n        this.url = URL.createObjectURL(file);\n      } else {\n        Swal.fire(this.$t('Error!'), this.$t('Please select a valid thumbnail with size less than 2 MB'), 'error');\n      }\n    },\n    updateBalance: function updateBalance() {\n      this.form.availableBalance = 0;\n      if (this.form.account) {\n        this.form.availableBalance = this.form.account.availableBalance;\n      }\n    },\n    // calculate total\n    calculateTotalSalary: function calculateTotalSalary() {\n      var salary = Number(this.form.employee.totalSalary);\n      var deduction = Number(this.form.deductionAmount);\n      var mobileBill = Number(this.form.mobileBill);\n      var foodBill = Number(this.form.foodBill);\n      var bonus = Number(this.form.bonus);\n      var commission = Number(this.form.commission);\n      var advance = Number(this.form.advance);\n      var festivalBonus = Number(this.form.festivalBonus);\n      var travelAllowance = Number(this.form.travelAllowance);\n      var others = Number(this.form.others);\n      this.form.totalSalary = mobileBill + foodBill + bonus + commission + festivalBonus + travelAllowance + others + advance - deduction;\n      if (salary > 0) {\n        return this.form.totalSalary = salary + this.form.totalSalary;\n      }\n      return this.form.totalSalary;\n    },\n    // save payroll\n    savePayroll: function savePayroll() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _context3.n = 1;\n              return _this4.form.post(window.location.origin + '/api/payroll').then(function () {\n                toast.fire({\n                  type: 'success',\n                  title: _this4.$t('Payroll added successfully')\n                });\n                _this4.$router.push({\n                  name: 'payroll.index'\n                });\n              })[\"catch\"](function () {\n                toast.fire({\n                  type: 'error',\n                  title: _this4.$t('Opps...something went wrong')\n                });\n              });\n            case 1:\n              return _context3.a(2);\n          }\n        }, _callee3);\n      }))();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/payroll/create.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/payroll/create.vue?vue&type=template&id=704493cf":
/*!*****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/payroll/create.vue?vue&type=template&id=704493cf ***!
  \*****************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", [_c(\"breadcrumbs\", {\n    attrs: {\n      items: _vm.breadcrumbs,\n      current: _vm.breadcrumbsCurrent\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"col-lg-12\"\n  }, [_c(\"div\", {\n    staticClass: \"card\"\n  }, [_c(\"div\", {\n    staticClass: \"card-header\"\n  }, [_c(\"h3\", {\n    staticClass: \"card-title\"\n  }, [_vm._v(_vm._s(_vm.$t(\"Create employee payroll\")))]), _vm._v(\" \"), _c(\"router-link\", {\n    staticClass: \"btn btn-dark float-right\",\n    attrs: {\n      to: {\n        name: \"payroll.index\"\n      }\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-long-arrow-alt-left\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"Back\")) + \"\\n          \")])], 1), _vm._v(\" \"), _c(\"form\", {\n    attrs: {\n      role: \"form\"\n    },\n    on: {\n      submit: function submit($event) {\n        $event.preventDefault();\n        return _vm.savePayroll.apply(null, arguments);\n      },\n      keydown: function keydown($event) {\n        return _vm.form.onKeydown($event);\n      }\n    }\n  }, [_c(\"div\", {\n    staticClass: \"card-body\"\n  }, [_c(\"div\", {\n    staticClass: \"row\"\n  }, [_vm.items ? _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"employee\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Employee\"))), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _vm.items ? _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"employee\")\n    },\n    attrs: {\n      options: _vm.items,\n      label: \"name\",\n      name: \"employee\",\n      placeholder: _vm.$t(\"Select an employee\")\n    },\n    on: {\n      input: _vm.calculateTotalSalary\n    },\n    model: {\n      value: _vm.form.employee,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"employee\", $$v);\n      },\n      expression: \"form.employee\"\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"employee\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"salaryMonth\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Salary Month\"))), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"select\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.salaryMonth,\n      expression: \"form.salaryMonth\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"salaryMonth\")\n    },\n    attrs: {\n      id: \"salaryMonth\",\n      name: \"salaryMonth\"\n    },\n    on: {\n      change: function change($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.form, \"salaryMonth\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }\n    }\n  }, [_c(\"option\", {\n    attrs: {\n      value: \"\",\n      selected: \"\",\n      disabled: \"\"\n    }\n  }, [_vm._v(\"\\n                    \" + _vm._s(_vm.$t(\"Select a salary month\")) + \"\\n                  \")]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"January\"\n    }\n  }, [_vm._v(\"January\")]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"February\"\n    }\n  }, [_vm._v(\"February\")]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"March\"\n    }\n  }, [_vm._v(\"March\")]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"April\"\n    }\n  }, [_vm._v(\"April\")]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"May\"\n    }\n  }, [_vm._v(\"May\")]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"June\"\n    }\n  }, [_vm._v(\"June\")]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"July\"\n    }\n  }, [_vm._v(\"July\")]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"August\"\n    }\n  }, [_vm._v(\"August\")]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"September\"\n    }\n  }, [_vm._v(\"September\")]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"October\"\n    }\n  }, [_vm._v(\"October\")]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"November\"\n    }\n  }, [_vm._v(\"November\")]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"December\"\n    }\n  }, [_vm._v(\"December\")])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"salaryMonth\"\n    }\n  })], 1)]), _vm._v(\" \"), _vm.form.employee ? _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"presentSalary\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Present Salary\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.employee.totalSalary,\n      expression: \"form.employee.totalSalary\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"presentSalary\")\n    },\n    attrs: {\n      id: \"presentSalary\",\n      type: \"number\",\n      step: \"any\",\n      name: \"presentSalary\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.employee.totalSalary\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form.employee, \"totalSalary\", $event.target.value);\n      }\n    }\n  })]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"deductionAmount\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Deduction Amount\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.deductionAmount,\n      expression: \"form.deductionAmount\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"deductionAmount\")\n    },\n    attrs: {\n      id: \"deductionAmount\",\n      type: \"number\",\n      step: \"any\",\n      name: \"deductionAmount\",\n      min: \"0\",\n      placeholder: _vm.$t(\"Enter a deduction amount\")\n    },\n    domProps: {\n      value: _vm.form.deductionAmount\n    },\n    on: {\n      change: _vm.calculateTotalSalary,\n      keyup: _vm.calculateTotalSalary,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"deductionAmount\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"deductionAmount\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"deductionReason\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Deduction Reason\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.deductionReason,\n      expression: \"form.deductionReason\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"deductionReason\")\n    },\n    attrs: {\n      id: \"deductionReason\",\n      type: \"text\",\n      name: \"deductionReason\",\n      placeholder: _vm.$t(\"Enter a deduction reason\")\n    },\n    domProps: {\n      value: _vm.form.deductionReason\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"deductionReason\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"deductionReason\"\n    }\n  })], 1)]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"mobileBill\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Mobile Bill\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.mobileBill,\n      expression: \"form.mobileBill\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"mobileBill\")\n    },\n    attrs: {\n      id: \"mobileBill\",\n      type: \"number\",\n      step: \"any\",\n      name: \"mobileBill\",\n      min: \"0\",\n      placeholder: _vm.$t(\"Enter a mobile bill\")\n    },\n    domProps: {\n      value: _vm.form.mobileBill\n    },\n    on: {\n      change: _vm.calculateTotalSalary,\n      keyup: _vm.calculateTotalSalary,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"mobileBill\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"mobileBill\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"foodBill\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Food Bill\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.foodBill,\n      expression: \"form.foodBill\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"foodBill\")\n    },\n    attrs: {\n      id: \"foodBill\",\n      type: \"number\",\n      step: \"any\",\n      name: \"foodBill\",\n      placeholder: _vm.$t(\"Enter a food bill\")\n    },\n    domProps: {\n      value: _vm.form.foodBill\n    },\n    on: {\n      change: _vm.calculateTotalSalary,\n      keyup: _vm.calculateTotalSalary,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"foodBill\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"foodBill\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"bonus\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Bonus\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.bonus,\n      expression: \"form.bonus\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"bonus\")\n    },\n    attrs: {\n      id: \"bonus\",\n      type: \"number\",\n      step: \"any\",\n      name: \"bonus\",\n      min: \"0\",\n      placeholder: _vm.$t(\"Enter a bonus\")\n    },\n    domProps: {\n      value: _vm.form.bonus\n    },\n    on: {\n      change: _vm.calculateTotalSalary,\n      keyup: _vm.calculateTotalSalary,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"bonus\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"bonus\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"commission\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Commission\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.commission,\n      expression: \"form.commission\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"commission\")\n    },\n    attrs: {\n      id: \"commission\",\n      type: \"number\",\n      step: \"any\",\n      name: \"commission\",\n      placeholder: _vm.$t(\"Enter a commission\")\n    },\n    domProps: {\n      value: _vm.form.commission\n    },\n    on: {\n      change: _vm.calculateTotalSalary,\n      keyup: _vm.calculateTotalSalary,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"commission\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"commission\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"festivalBonus\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Festival Bonus\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.festivalBonus,\n      expression: \"form.festivalBonus\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"festivalBonus\")\n    },\n    attrs: {\n      id: \"festivalBonus\",\n      type: \"number\",\n      step: \"any\",\n      name: \"festivalBonus\",\n      min: \"0\",\n      placeholder: _vm.$t(\"Enter a festival bonus\")\n    },\n    domProps: {\n      value: _vm.form.festivalBonus\n    },\n    on: {\n      change: _vm.calculateTotalSalary,\n      keyup: _vm.calculateTotalSalary,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"festivalBonus\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"festivalBonus\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"travelAllowance\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Travel Allowance(TA)\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.travelAllowance,\n      expression: \"form.travelAllowance\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"travelAllowance\")\n    },\n    attrs: {\n      id: \"travelAllowance\",\n      type: \"number\",\n      step: \"any\",\n      name: \"travelAllowance\",\n      placeholder: _vm.$t(\"Enter a travel allowance\")\n    },\n    domProps: {\n      value: _vm.form.travelAllowance\n    },\n    on: {\n      change: _vm.calculateTotalSalary,\n      keyup: _vm.calculateTotalSalary,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"travelAllowance\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"travelAllowance\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"others\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Others\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.others,\n      expression: \"form.others\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"others\")\n    },\n    attrs: {\n      id: \"others\",\n      type: \"number\",\n      step: \"any\",\n      name: \"others\",\n      min: \"0\",\n      placeholder: _vm.$t(\"Enter others amount\")\n    },\n    domProps: {\n      value: _vm.form.others\n    },\n    on: {\n      change: _vm.calculateTotalSalary,\n      keyup: _vm.calculateTotalSalary,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"others\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"others\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"advance\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Advance\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.advance,\n      expression: \"form.advance\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"advance\")\n    },\n    attrs: {\n      id: \"advance\",\n      type: \"number\",\n      step: \"any\",\n      name: \"advance\",\n      placeholder: _vm.$t(\"Advance\")\n    },\n    domProps: {\n      value: _vm.form.advance\n    },\n    on: {\n      change: _vm.calculateTotalSalary,\n      keyup: _vm.calculateTotalSalary,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"advance\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"advance\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"totalSalary\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Total Salary\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.totalSalary,\n      expression: \"form.totalSalary\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"totalSalary\")\n    },\n    attrs: {\n      id: \"totalSalary\",\n      type: \"number\",\n      step: \"any\",\n      name: \"totalSalary\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.totalSalary\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"totalSalary\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"totalSalary\"\n    }\n  })], 1), _vm._v(\" \"), _vm.accounts ? _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"account\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Account\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"account\")\n    },\n    attrs: {\n      options: _vm.accounts,\n      label: \"label\",\n      name: \"account\",\n      placeholder: _vm.$t(\"Select an account\")\n    },\n    on: {\n      input: _vm.updateBalance\n    },\n    scopedSlots: _vm._u([{\n      key: \"option\",\n      fn: function fn(option) {\n        return [_c(\"img\", {\n          staticStyle: {\n            width: \"30px\",\n            height: \"30px\"\n          },\n          attrs: {\n            src: option.image\n          }\n        }), _vm._v(\"\\n                      \" + _vm._s(option.label) + \"\\n                  \")];\n      }\n    }], null, false, 3023951659),\n    model: {\n      value: _vm.form.account,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"account\", $$v);\n      },\n      expression: \"form.account\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"account\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"availableBalance\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Available Balance\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.availableBalance,\n      expression: \"form.availableBalance\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"availableBalance\")\n    },\n    attrs: {\n      id: \"availableBalance\",\n      type: \"number\",\n      step: \"any\",\n      name: \"availableBalance\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.availableBalance\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"availableBalance\", $event.target.value);\n      }\n    }\n  })])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"chequeNo\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Cheque No\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.chequeNo,\n      expression: \"form.chequeNo\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"chequeNo\")\n    },\n    attrs: {\n      id: \"chequeNo\",\n      type: \"text\",\n      name: \"chequeNo\",\n      placeholder: _vm.$t(\"Enter a cheque number\")\n    },\n    domProps: {\n      value: _vm.form.chequeNo\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"chequeNo\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"chequeNo\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"salaryDate\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Salary Date\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.salaryDate,\n      expression: \"form.salaryDate\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"salaryDate\")\n    },\n    attrs: {\n      id: \"salaryDate\",\n      type: \"date\",\n      name: \"salaryDate\"\n    },\n    domProps: {\n      value: _vm.form.salaryDate\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"salaryDate\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"salaryDate\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"status\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Status\")))]), _vm._v(\" \"), _c(\"select\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.status,\n      expression: \"form.status\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"status\")\n    },\n    attrs: {\n      id: \"status\"\n    },\n    on: {\n      change: function change($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.form, \"status\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }\n    }\n  }, [_c(\"option\", {\n    attrs: {\n      value: \"1\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Active\")))]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"0\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Inactive\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"status\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"note\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Note\")))]), _vm._v(\" \"), _c(\"textarea\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.note,\n      expression: \"form.note\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"note\")\n    },\n    attrs: {\n      id: \"note\",\n      placeholder: _vm.$t(\"Write your note here!\")\n    },\n    domProps: {\n      value: _vm.form.note\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"note\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"note\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"image\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Image\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"custom-file\"\n  }, [_c(\"input\", {\n    staticClass: \"custom-file-input\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"image\")\n    },\n    attrs: {\n      id: \"image\",\n      type: \"file\",\n      name: \"image\"\n    },\n    on: {\n      change: _vm.onFileChange\n    }\n  }), _vm._v(\" \"), _c(\"label\", {\n    staticClass: \"custom-file-label\",\n    attrs: {\n      \"for\": \"image\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Choose file\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"image\"\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bg-light mt-4 w-25\"\n  }, [_vm.url ? _c(\"img\", {\n    staticClass: \"img-fluid\",\n    attrs: {\n      src: _vm.url,\n      alt: _vm.$t(\"Attached Image\")\n    }\n  }) : _vm._e()])], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"card-footer\"\n  }, [_c(\"v-button\", {\n    staticClass: \"btn btn-primary\",\n    attrs: {\n      loading: _vm.form.busy\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-save\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"Save\")) + \"\\n            \")]), _vm._v(\" \"), _c(\"button\", {\n    staticClass: \"btn btn-secondary float-right\",\n    attrs: {\n      type: \"reset\"\n    },\n    on: {\n      click: function click($event) {\n        return _vm.form.reset();\n      }\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-power-off\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"Reset\")) + \"\\n            \")])], 1)])])])])], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvcGF5cm9sbC9jcmVhdGUudnVlPzMzYzQiXSwibmFtZXMiOlsicmVuZGVyIiwiX3ZtIiwiX2MiLCJfc2VsZiIsImF0dHJzIiwiaXRlbXMiLCJicmVhZGNydW1icyIsImN1cnJlbnQiLCJicmVhZGNydW1ic0N1cnJlbnQiLCJfdiIsInN0YXRpY0NsYXNzIiwiX3MiLCIkdCIsInRvIiwibmFtZSIsInJvbGUiLCJvbiIsInN1Ym1pdCIsIiRldmVudCIsInByZXZlbnREZWZhdWx0Iiwic2F2ZVBheXJvbGwiLCJhcHBseSIsImFyZ3VtZW50cyIsImtleWRvd24iLCJmb3JtIiwib25LZXlkb3duIiwiZXJyb3JzIiwiaGFzIiwib3B0aW9ucyIsImxhYmVsIiwicGxhY2Vob2xkZXIiLCJpbnB1dCIsImNhbGN1bGF0ZVRvdGFsU2FsYXJ5IiwibW9kZWwiLCJ2YWx1ZSIsImVtcGxveWVlIiwiY2FsbGJhY2siLCIkJHYiLCIkc2V0IiwiZXhwcmVzc2lvbiIsIl9lIiwiZmllbGQiLCJkaXJlY3RpdmVzIiwicmF3TmFtZSIsInNhbGFyeU1vbnRoIiwiaWQiLCJjaGFuZ2UiLCIkJHNlbGVjdGVkVmFsIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJmaWx0ZXIiLCJjYWxsIiwidGFyZ2V0IiwibyIsInNlbGVjdGVkIiwibWFwIiwidmFsIiwiX3ZhbHVlIiwibXVsdGlwbGUiLCJkaXNhYmxlZCIsInRvdGFsU2FsYXJ5IiwidHlwZSIsInN0ZXAiLCJyZWFkb25seSIsImRvbVByb3BzIiwiY29tcG9zaW5nIiwiZGVkdWN0aW9uQW1vdW50IiwibWluIiwia2V5dXAiLCJkZWR1Y3Rpb25SZWFzb24iLCJtb2JpbGVCaWxsIiwiZm9vZEJpbGwiLCJib251cyIsImNvbW1pc3Npb24iLCJmZXN0aXZhbEJvbnVzIiwidHJhdmVsQWxsb3dhbmNlIiwib3RoZXJzIiwiYWR2YW5jZSIsImFjY291bnRzIiwidXBkYXRlQmFsYW5jZSIsInNjb3BlZFNsb3RzIiwiX3UiLCJrZXkiLCJmbiIsIm9wdGlvbiIsInN0YXRpY1N0eWxlIiwid2lkdGgiLCJoZWlnaHQiLCJzcmMiLCJpbWFnZSIsImFjY291bnQiLCJhdmFpbGFibGVCYWxhbmNlIiwiY2hlcXVlTm8iLCJzYWxhcnlEYXRlIiwic3RhdHVzIiwibm90ZSIsIm9uRmlsZUNoYW5nZSIsInVybCIsImFsdCIsImxvYWRpbmciLCJidXN5IiwiY2xpY2siLCJyZXNldCIsInN0YXRpY1JlbmRlckZucyIsIl93aXRoU3RyaXBwZWQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBLElBQUlBLE1BQU0sR0FBRyxTQUFTQSxNQUFNQSxDQUFBLEVBQUc7RUFDN0IsSUFBSUMsR0FBRyxHQUFHLElBQUk7SUFDWkMsRUFBRSxHQUFHRCxHQUFHLENBQUNFLEtBQUssQ0FBQ0QsRUFBRTtFQUNuQixPQUFPQSxFQUFFLENBQ1AsS0FBSyxFQUNMLENBQ0VBLEVBQUUsQ0FBQyxhQUFhLEVBQUU7SUFDaEJFLEtBQUssRUFBRTtNQUFFQyxLQUFLLEVBQUVKLEdBQUcsQ0FBQ0ssV0FBVztNQUFFQyxPQUFPLEVBQUVOLEdBQUcsQ0FBQ087SUFBbUI7RUFDbkUsQ0FBQyxDQUFDLEVBQ0ZQLEdBQUcsQ0FBQ1EsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUNYUCxFQUFFLENBQUMsS0FBSyxFQUFFO0lBQUVRLFdBQVcsRUFBRTtFQUFNLENBQUMsRUFBRSxDQUNoQ1IsRUFBRSxDQUFDLEtBQUssRUFBRTtJQUFFUSxXQUFXLEVBQUU7RUFBWSxDQUFDLEVBQUUsQ0FDdENSLEVBQUUsQ0FBQyxLQUFLLEVBQUU7SUFBRVEsV0FBVyxFQUFFO0VBQU8sQ0FBQyxFQUFFLENBQ2pDUixFQUFFLENBQ0EsS0FBSyxFQUNMO0lBQUVRLFdBQVcsRUFBRTtFQUFjLENBQUMsRUFDOUIsQ0FDRVIsRUFBRSxDQUFDLElBQUksRUFBRTtJQUFFUSxXQUFXLEVBQUU7RUFBYSxDQUFDLEVBQUUsQ0FDdENULEdBQUcsQ0FBQ1EsRUFBRSxDQUFDUixHQUFH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LENBQUMsQ0FBQyxHQUFHLGdCQUFnQixDQUFDLENBRTNELENBQUMsRUFDRFgsR0FBRyxDQUFDUSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQ1hQLEVBQUUsQ0FDQSxRQUFRLEVBQ1I7SUFDRVEsV0FBVyxFQUFFLCtCQUErQjtJQUM1Q04sS0FBSyxFQUFFO01BQUV5RCxJQUFJLEVBQUU7SUFBUSxDQUFDO0lBQ3hCN0MsRUFBRSxFQUFFO01BQ0ZxRixLQUFLLEVBQUUsU0FBUEEsS0FBS0EsQ0FBWW5GLE1BQU0sRUFBRTtRQUN2QixPQUFPakIsR0FBRyxDQUFDdUIsSUFBSSxDQUFDOEUsS0FBSyxDQUFDLENBQUM7TUFDekI7SUFDRjtFQUNGLENBQUMsRUFDRCxDQUNFcEcsRUFBRSxDQUFDLEdBQUcsRUFBRTtJQUFFUSxXQUFXLEVBQUU7RUFBbUIsQ0FBQyxDQUFDLEVBQzVDVCxHQUFHLENBQUNRLEVBQUUsQ0FDSixHQUFHLEdBQUdSLEdBQUcsQ0FBQ1UsRUFBRSxDQUFDVixHQUFHLENBQUNXLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLGdCQUNsQyxDQUFDLENBRUwsQ0FBQyxDQUNGLEVBQ0QsQ0FDRixDQUFDLENBRUwsQ0FBQyxDQUNGLENBQUMsQ0FDSCxDQUFDLENBQ0gsQ0FBQyxDQUNILEVBQ0QsQ0FDRixDQUFDO0FBQ0gsQ0FBQztBQUNELElBQUkyRixlQUFlLEdBQUcsRUFBRTtBQUN4QnZHLE1BQU0sQ0FBQ3dHLGFBQWEsR0FBRyxJQUFJIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPyEuL3Jlc291cmNlcy9qcy9wYWdlcy9wYXlyb2xsL2NyZWF0ZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NzA0NDkzY2YuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICB2YXIgX3ZtID0gdGhpcyxcbiAgICBfYyA9IF92bS5fc2VsZi5fY1xuICByZXR1cm4gX2MoXG4gICAgXCJkaXZcIixcbiAgICBbXG4gICAgICBfYyhcImJyZWFkY3J1bWJzXCIsIHtcbiAgICAgICAgYXR0cnM6IHsgaXRlbXM6IF92bS5icmVhZGNydW1icywgY3VycmVudDogX3ZtLmJyZWFkY3J1bWJzQ3VycmVudCB9LFxuICAgICAgfSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJyb3dcIiB9LCBbXG4gICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiY29sLWxnLTEyXCIgfSwgW1xuICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiY2FyZFwiIH0sIFtcbiAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImNhcmQtaGVhZGVyXCIgfSxcbiAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIF9jKFwiaDNcIiwgeyBzdGF0aWNDbGFzczogXCJjYXJkLXRpdGxlXCIgfSwgW1xuICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJDcmVhdGUgZW1wbG95ZWUgcGF5cm9sbFwiKSkpLFxuICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICBcInJvdXRlci1saW5rXCIsXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImJ0biBidG4tZGFyayBmbG9hdC1yaWdodFwiLFxuICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0bzogeyBuYW1lOiBcInBheXJvbGwuaW5kZXhcIiB9IH0sXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBfYyhcImlcIiwgeyBzdGF0aWNDbGFzczogXCJmYXMgZmEtbG9uZy1hcnJvdy1hbHQtbGVmdFwiIH0pLFxuICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIgKyBfdm0uX3MoX3ZtLiR0KFwiQmFja1wiKSkgKyBcIlxcbiAgICAgICAgICBcIiksXG4gICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgXCJmb3JtXCIsXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBhdHRyczogeyByb2xlOiBcImZvcm1cIiB9LFxuICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICBzdWJtaXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zYXZlUGF5cm9sbC5hcHBseShudWxsLCBhcmd1bWVudHMpXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAga2V5ZG93bjogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmZvcm0ub25LZXlkb3duKCRldmVudClcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiY2FyZC1ib2R5XCIgfSwgW1xuICAgICAgICAgICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJyb3dcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgIF92bS5pdGVtc1xuICAgICAgICAgICAgICAgICAgICAgID8gX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZm9ybS1ncm91cCBjb2wtbWQtNlwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImxhYmVsXCIsIHsgYXR0cnM6IHsgZm9yOiBcImVtcGxveWVlXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS4kdChcIkVtcGxveWVlXCIpKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInNwYW5cIiwgeyBzdGF0aWNDbGFzczogXCJyZXF1aXJlZFwiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiKlwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLml0ZW1zXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwidi1zZWxlY3RcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImlzLWludmFsaWRcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0uZXJyb3JzLmhhcyhcImVtcGxveWVlXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IF92bS5pdGVtcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBcIm5hbWVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiZW1wbG95ZWVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBfdm0uJHQoXCJTZWxlY3QgYW4gZW1wbG95ZWVcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogeyBpbnB1dDogX3ZtLmNhbGN1bGF0ZVRvdGFsU2FsYXJ5IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS5lbXBsb3llZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAoJCR2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5mb3JtLCBcImVtcGxveWVlXCIsICQkdilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImZvcm0uZW1wbG95ZWVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaGFzLWVycm9yXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcm06IF92bS5mb3JtLCBmaWVsZDogXCJlbXBsb3llZVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZm9ybS1ncm91cCBjb2wtbWQtNlwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJsYWJlbFwiLCB7IGF0dHJzOiB7IGZvcjogXCJzYWxhcnlNb250aFwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS4kdChcIlNhbGFyeSBNb250aFwiKSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInNwYW5cIiwgeyBzdGF0aWNDbGFzczogXCJyZXF1aXJlZFwiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIqXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcInNlbGVjdFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1tb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0uc2FsYXJ5TW9udGgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiZm9ybS5zYWxhcnlNb250aFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZvcm0tY29udHJvbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImlzLWludmFsaWRcIjogX3ZtLmZvcm0uZXJyb3JzLmhhcyhcInNhbGFyeU1vbnRoXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6IFwic2FsYXJ5TW9udGhcIiwgbmFtZTogXCJzYWxhcnlNb250aFwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZTogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgJCRzZWxlY3RlZFZhbCA9IEFycmF5LnByb3RvdHlwZS5maWx0ZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY2FsbCgkZXZlbnQudGFyZ2V0Lm9wdGlvbnMsIGZ1bmN0aW9uIChvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gby5zZWxlY3RlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAobykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbCA9IFwiX3ZhbHVlXCIgaW4gbyA/IG8uX3ZhbHVlIDogby52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5mb3JtLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwic2FsYXJ5TW9udGhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQudGFyZ2V0Lm11bHRpcGxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICQkc2VsZWN0ZWRWYWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJCRzZWxlY3RlZFZhbFswXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwib3B0aW9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uJHQoXCJTZWxlY3QgYSBzYWxhcnkgbW9udGhcIikpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJvcHRpb25cIiwgeyBhdHRyczogeyB2YWx1ZTogXCJKYW51YXJ5XCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCJKYW51YXJ5XCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJvcHRpb25cIiwgeyBhdHRyczogeyB2YWx1ZTogXCJGZWJydWFyeVwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiRmVicnVhcnlcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcIm9wdGlvblwiLCB7IGF0dHJzOiB7IHZhbHVlOiBcIk1hcmNoXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCJNYXJjaFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwib3B0aW9uXCIsIHsgYXR0cnM6IHsgdmFsdWU6IFwiQXByaWxcIiB9IH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIkFwcmlsXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJvcHRpb25cIiwgeyBhdHRyczogeyB2YWx1ZTogXCJNYXlcIiB9IH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIk1heVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwib3B0aW9uXCIsIHsgYXR0cnM6IHsgdmFsdWU6IFwiSnVuZVwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiSnVuZVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwib3B0aW9uXCIsIHsgYXR0cnM6IHsgdmFsdWU6IFwiSnVseVwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiSnVseVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwib3B0aW9uXCIsIHsgYXR0cnM6IHsgdmFsdWU6IFwiQXVndXN0XCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCJBdWd1c3RcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcIm9wdGlvblwiLCB7IGF0dHJzOiB7IHZhbHVlOiBcIlNlcHRlbWJlclwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiU2VwdGVtYmVyXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJvcHRpb25cIiwgeyBhdHRyczogeyB2YWx1ZTogXCJPY3RvYmVyXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCJPY3RvYmVyXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJvcHRpb25cIiwgeyBhdHRyczogeyB2YWx1ZTogXCJOb3ZlbWJlclwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiTm92ZW1iZXJcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcIm9wdGlvblwiLCB7IGF0dHJzOiB7IHZhbHVlOiBcIkRlY2VtYmVyXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCJEZWNlbWJlclwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImhhcy1lcnJvclwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcm06IF92bS5mb3JtLCBmaWVsZDogXCJzYWxhcnlNb250aFwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgIF92bS5mb3JtLmVtcGxveWVlXG4gICAgICAgICAgICAgICAgICAgID8gX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJyb3dcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImZvcm0tZ3JvdXAgY29sLW1kLTRcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBmb3I6IFwicHJlc2VudFNhbGFyeVwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLiR0KFwiUHJlc2VudCBTYWxhcnlcIikpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtbW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtLmVtcGxveWVlLnRvdGFsU2FsYXJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImZvcm0uZW1wbG95ZWUudG90YWxTYWxhcnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmb3JtLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpcy1pbnZhbGlkXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5mb3JtLmVycm9ycy5oYXMoXCJwcmVzZW50U2FsYXJ5XCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcInByZXNlbnRTYWxhcnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibnVtYmVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwOiBcImFueVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJwcmVzZW50U2FsYXJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkb25seTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0uZm9ybS5lbXBsb3llZS50b3RhbFNhbGFyeSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVyblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ybS5lbXBsb3llZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRvdGFsU2FsYXJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZm9ybS1ncm91cCBjb2wtbWQtNFwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImxhYmVsXCIsIHsgYXR0cnM6IHsgZm9yOiBcImRlZHVjdGlvbkFtb3VudFwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJEZWR1Y3Rpb24gQW1vdW50XCIpKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtbW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0uZGVkdWN0aW9uQW1vdW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiZm9ybS5kZWR1Y3Rpb25BbW91bnRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmb3JtLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaXMtaW52YWxpZFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5mb3JtLmVycm9ycy5oYXMoXCJkZWR1Y3Rpb25BbW91bnRcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IFwiZGVkdWN0aW9uQW1vdW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibnVtYmVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXA6IFwiYW55XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiZGVkdWN0aW9uQW1vdW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogXCIwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBfdm0uJHQoXCJFbnRlciBhIGRlZHVjdGlvbiBhbW91bnRcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5mb3JtLmRlZHVjdGlvbkFtb3VudCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlOiBfdm0uY2FsY3VsYXRlVG90YWxTYWxhcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleXVwOiBfdm0uY2FsY3VsYXRlVG90YWxTYWxhcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5mb3JtLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkZWR1Y3Rpb25BbW91bnRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC50YXJnZXQudmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJoYXMtZXJyb3JcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybTogX3ZtLmZvcm0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkOiBcImRlZHVjdGlvbkFtb3VudFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC00XCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBmb3I6IFwiZGVkdWN0aW9uUmVhc29uXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS4kdChcIkRlZHVjdGlvbiBSZWFzb25cIikpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1tb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS5kZWR1Y3Rpb25SZWFzb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJmb3JtLmRlZHVjdGlvblJlYXNvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZvcm0tY29udHJvbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpcy1pbnZhbGlkXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0uZXJyb3JzLmhhcyhcImRlZHVjdGlvblJlYXNvblwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJkZWR1Y3Rpb25SZWFzb25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiZGVkdWN0aW9uUmVhc29uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBfdm0uJHQoXCJFbnRlciBhIGRlZHVjdGlvbiByZWFzb25cIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5mb3JtLmRlZHVjdGlvblJlYXNvbiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVyblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRlZHVjdGlvblJlYXNvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImhhcy1lcnJvclwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtOiBfdm0uZm9ybSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQ6IFwiZGVkdWN0aW9uUmVhc29uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJyb3dcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC0zXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImxhYmVsXCIsIHsgYXR0cnM6IHsgZm9yOiBcIm1vYmlsZUJpbGxcIiB9IH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJNb2JpbGUgQmlsbFwiKSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtbW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS5tb2JpbGVCaWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJmb3JtLm1vYmlsZUJpbGxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmb3JtLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImlzLWludmFsaWRcIjogX3ZtLmZvcm0uZXJyb3JzLmhhcyhcIm1vYmlsZUJpbGxcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IFwibW9iaWxlQmlsbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibnVtYmVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcDogXCJhbnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm1vYmlsZUJpbGxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW46IFwiMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBfdm0uJHQoXCJFbnRlciBhIG1vYmlsZSBiaWxsXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLmZvcm0ubW9iaWxlQmlsbCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZTogX3ZtLmNhbGN1bGF0ZVRvdGFsU2FsYXJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleXVwOiBfdm0uY2FsY3VsYXRlVG90YWxTYWxhcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibW9iaWxlQmlsbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQudGFyZ2V0LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaGFzLWVycm9yXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgZm9ybTogX3ZtLmZvcm0sIGZpZWxkOiBcIm1vYmlsZUJpbGxcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC0zXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImxhYmVsXCIsIHsgYXR0cnM6IHsgZm9yOiBcImZvb2RCaWxsXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLiR0KFwiRm9vZCBCaWxsXCIpKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1tb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtLmZvb2RCaWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJmb3JtLmZvb2RCaWxsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZm9ybS1jb250cm9sXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpcy1pbnZhbGlkXCI6IF92bS5mb3JtLmVycm9ycy5oYXMoXCJmb29kQmlsbFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJmb29kQmlsbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibnVtYmVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcDogXCJhbnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcImZvb2RCaWxsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IF92bS4kdChcIkVudGVyIGEgZm9vZCBiaWxsXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLmZvcm0uZm9vZEJpbGwgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IF92bS5jYWxjdWxhdGVUb3RhbFNhbGFyeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXl1cDogX3ZtLmNhbGN1bGF0ZVRvdGFsU2FsYXJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVyblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5mb3JtLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImZvb2RCaWxsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC50YXJnZXQudmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJoYXMtZXJyb3JcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBmb3JtOiBfdm0uZm9ybSwgZmllbGQ6IFwiZm9vZEJpbGxcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC0zXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImxhYmVsXCIsIHsgYXR0cnM6IHsgZm9yOiBcImJvbnVzXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLiR0KFwiQm9udXNcIikpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LW1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0uYm9udXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImZvcm0uYm9udXNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmb3JtLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsgXCJpcy1pbnZhbGlkXCI6IF92bS5mb3JtLmVycm9ycy5oYXMoXCJib251c1wiKSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcImJvbnVzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJudW1iZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwOiBcImFueVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiYm9udXNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW46IFwiMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBfdm0uJHQoXCJFbnRlciBhIGJvbnVzXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLmZvcm0uYm9udXMgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IF92bS5jYWxjdWxhdGVUb3RhbFNhbGFyeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXl1cDogX3ZtLmNhbGN1bGF0ZVRvdGFsU2FsYXJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVyblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm0sIFwiYm9udXNcIiwgJGV2ZW50LnRhcmdldC52YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJoYXMtZXJyb3JcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBmb3JtOiBfdm0uZm9ybSwgZmllbGQ6IFwiYm9udXNcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC0zXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImxhYmVsXCIsIHsgYXR0cnM6IHsgZm9yOiBcImNvbW1pc3Npb25cIiB9IH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJDb21taXNzaW9uXCIpKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1tb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtLmNvbW1pc3Npb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImZvcm0uY29tbWlzc2lvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZvcm0tY29udHJvbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaXMtaW52YWxpZFwiOiBfdm0uZm9ybS5lcnJvcnMuaGFzKFwiY29tbWlzc2lvblwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJjb21taXNzaW9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJudW1iZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwOiBcImFueVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiY29tbWlzc2lvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBfdm0uJHQoXCJFbnRlciBhIGNvbW1pc3Npb25cIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0uZm9ybS5jb21taXNzaW9uIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlOiBfdm0uY2FsY3VsYXRlVG90YWxTYWxhcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5dXA6IF92bS5jYWxjdWxhdGVUb3RhbFNhbGFyeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ybSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjb21taXNzaW9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC50YXJnZXQudmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJoYXMtZXJyb3JcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBmb3JtOiBfdm0uZm9ybSwgZmllbGQ6IFwiY29tbWlzc2lvblwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwicm93XCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZm9ybS1ncm91cCBjb2wtbWQtM1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJsYWJlbFwiLCB7IGF0dHJzOiB7IGZvcjogXCJmZXN0aXZhbEJvbnVzXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLiR0KFwiRmVzdGl2YWwgQm9udXNcIikpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LW1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0uZmVzdGl2YWxCb251cyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiZm9ybS5mZXN0aXZhbEJvbnVzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZm9ybS1jb250cm9sXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpcy1pbnZhbGlkXCI6IF92bS5mb3JtLmVycm9ycy5oYXMoXCJmZXN0aXZhbEJvbnVzXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcImZlc3RpdmFsQm9udXNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm51bWJlclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXA6IFwiYW55XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJmZXN0aXZhbEJvbnVzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluOiBcIjBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogX3ZtLiR0KFwiRW50ZXIgYSBmZXN0aXZhbCBib251c1wiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5mb3JtLmZlc3RpdmFsQm9udXMgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IF92bS5jYWxjdWxhdGVUb3RhbFNhbGFyeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXl1cDogX3ZtLmNhbGN1bGF0ZVRvdGFsU2FsYXJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVyblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5mb3JtLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImZlc3RpdmFsQm9udXNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImhhcy1lcnJvclwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcm06IF92bS5mb3JtLCBmaWVsZDogXCJmZXN0aXZhbEJvbnVzXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZm9ybS1ncm91cCBjb2wtbWQtM1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJsYWJlbFwiLCB7IGF0dHJzOiB7IGZvcjogXCJ0cmF2ZWxBbGxvd2FuY2VcIiB9IH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJUcmF2ZWwgQWxsb3dhbmNlKFRBKVwiKSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtbW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS50cmF2ZWxBbGxvd2FuY2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImZvcm0udHJhdmVsQWxsb3dhbmNlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZm9ybS1jb250cm9sXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpcy1pbnZhbGlkXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ybS5lcnJvcnMuaGFzKFwidHJhdmVsQWxsb3dhbmNlXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcInRyYXZlbEFsbG93YW5jZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibnVtYmVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcDogXCJhbnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInRyYXZlbEFsbG93YW5jZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBfdm0uJHQoXCJFbnRlciBhIHRyYXZlbCBhbGxvd2FuY2VcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0uZm9ybS50cmF2ZWxBbGxvd2FuY2UgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IF92bS5jYWxjdWxhdGVUb3RhbFNhbGFyeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXl1cDogX3ZtLmNhbGN1bGF0ZVRvdGFsU2FsYXJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVyblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5mb3JtLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRyYXZlbEFsbG93YW5jZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQudGFyZ2V0LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaGFzLWVycm9yXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgZm9ybTogX3ZtLmZvcm0sIGZpZWxkOiBcInRyYXZlbEFsbG93YW5jZVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImZvcm0tZ3JvdXAgY29sLW1kLTNcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBmb3I6IFwib3RoZXJzXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLiR0KFwiT3RoZXJzXCIpKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1tb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtLm90aGVycyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiZm9ybS5vdGhlcnNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmb3JtLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImlzLWludmFsaWRcIjogX3ZtLmZvcm0uZXJyb3JzLmhhcyhcIm90aGVyc1wiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJvdGhlcnNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm51bWJlclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXA6IFwiYW55XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJvdGhlcnNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW46IFwiMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBfdm0uJHQoXCJFbnRlciBvdGhlcnMgYW1vdW50XCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLmZvcm0ub3RoZXJzIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlOiBfdm0uY2FsY3VsYXRlVG90YWxTYWxhcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5dXA6IF92bS5jYWxjdWxhdGVUb3RhbFNhbGFyeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5mb3JtLCBcIm90aGVyc1wiLCAkZXZlbnQudGFyZ2V0LnZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImhhcy1lcnJvclwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcm06IF92bS5mb3JtLCBmaWVsZDogXCJvdGhlcnNcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC0zXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImxhYmVsXCIsIHsgYXR0cnM6IHsgZm9yOiBcImFkdmFuY2VcIiB9IH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJBZHZhbmNlXCIpKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1tb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtLmFkdmFuY2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImZvcm0uYWR2YW5jZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZvcm0tY29udHJvbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaXMtaW52YWxpZFwiOiBfdm0uZm9ybS5lcnJvcnMuaGFzKFwiYWR2YW5jZVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJhZHZhbmNlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJudW1iZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwOiBcImFueVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiYWR2YW5jZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBfdm0uJHQoXCJBZHZhbmNlXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLmZvcm0uYWR2YW5jZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZTogX3ZtLmNhbGN1bGF0ZVRvdGFsU2FsYXJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleXVwOiBfdm0uY2FsY3VsYXRlVG90YWxTYWxhcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0uZm9ybSwgXCJhZHZhbmNlXCIsICRldmVudC50YXJnZXQudmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaGFzLWVycm9yXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgZm9ybTogX3ZtLmZvcm0sIGZpZWxkOiBcImFkdmFuY2VcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcInJvd1wiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImZvcm0tZ3JvdXAgY29sLW1kLTRcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBmb3I6IFwidG90YWxTYWxhcnlcIiB9IH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJUb3RhbCBTYWxhcnlcIikpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LW1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0udG90YWxTYWxhcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImZvcm0udG90YWxTYWxhcnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmb3JtLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImlzLWludmFsaWRcIjogX3ZtLmZvcm0uZXJyb3JzLmhhcyhcInRvdGFsU2FsYXJ5XCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcInRvdGFsU2FsYXJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJudW1iZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwOiBcImFueVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwidG90YWxTYWxhcnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkb25seTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5mb3JtLnRvdGFsU2FsYXJ5IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidG90YWxTYWxhcnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImhhcy1lcnJvclwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcm06IF92bS5mb3JtLCBmaWVsZDogXCJ0b3RhbFNhbGFyeVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgX3ZtLmFjY291bnRzXG4gICAgICAgICAgICAgICAgICAgICAgPyBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC00XCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBmb3I6IFwiYWNjb3VudFwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLiR0KFwiQWNjb3VudFwiKSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInNwYW5cIiwgeyBzdGF0aWNDbGFzczogXCJyZXF1aXJlZFwiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiKlwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJ2LXNlbGVjdFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImlzLWludmFsaWRcIjogX3ZtLmZvcm0uZXJyb3JzLmhhcyhcImFjY291bnRcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uczogX3ZtLmFjY291bnRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogXCJsYWJlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcImFjY291bnRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IF92bS4kdChcIlNlbGVjdCBhbiBhY2NvdW50XCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7IGlucHV0OiBfdm0udXBkYXRlQmFsYW5jZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NvcGVkU2xvdHM6IF92bS5fdShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogXCJvcHRpb25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZuOiBmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbWdcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiMzBweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiMzBweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogb3B0aW9uLmltYWdlIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3Mob3B0aW9uLmxhYmVsKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzMDIzOTUxNjU5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtLmFjY291bnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAoJCR2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm0sIFwiYWNjb3VudFwiLCAkJHYpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiZm9ybS5hY2NvdW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJoYXMtZXJyb3JcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgZm9ybTogX3ZtLmZvcm0sIGZpZWxkOiBcImFjY291bnRcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC00XCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBmb3I6IFwiYXZhaWxhYmxlQmFsYW5jZVwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJBdmFpbGFibGUgQmFsYW5jZVwiKSkpLFxuICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LW1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtLmF2YWlsYWJsZUJhbGFuY2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJmb3JtLmF2YWlsYWJsZUJhbGFuY2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmb3JtLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwiaXMtaW52YWxpZFwiOiBfdm0uZm9ybS5lcnJvcnMuaGFzKFwiYXZhaWxhYmxlQmFsYW5jZVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJhdmFpbGFibGVCYWxhbmNlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibnVtYmVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXA6IFwiYW55XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiYXZhaWxhYmxlQmFsYW5jZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkb25seTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLmZvcm0uYXZhaWxhYmxlQmFsYW5jZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVyblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImF2YWlsYWJsZUJhbGFuY2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC50YXJnZXQudmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwicm93XCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZm9ybS1ncm91cCBjb2wtbWQtNFwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJsYWJlbFwiLCB7IGF0dHJzOiB7IGZvcjogXCJjaGVxdWVOb1wiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS4kdChcIkNoZXF1ZSBOb1wiKSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtbW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS5jaGVxdWVObyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiZm9ybS5jaGVxdWVOb1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZvcm0tY29udHJvbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaXMtaW52YWxpZFwiOiBfdm0uZm9ybS5lcnJvcnMuaGFzKFwiY2hlcXVlTm9cIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IFwiY2hlcXVlTm9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcImNoZXF1ZU5vXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IF92bS4kdChcIkVudGVyIGEgY2hlcXVlIG51bWJlclwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5mb3JtLmNoZXF1ZU5vIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiY2hlcXVlTm9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImhhcy1lcnJvclwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcm06IF92bS5mb3JtLCBmaWVsZDogXCJjaGVxdWVOb1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImZvcm0tZ3JvdXAgY29sLW1kLTRcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBmb3I6IFwic2FsYXJ5RGF0ZVwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS4kdChcIlNhbGFyeSBEYXRlXCIpKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1tb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtLnNhbGFyeURhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImZvcm0uc2FsYXJ5RGF0ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZvcm0tY29udHJvbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaXMtaW52YWxpZFwiOiBfdm0uZm9ybS5lcnJvcnMuaGFzKFwic2FsYXJ5RGF0ZVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJzYWxhcnlEYXRlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXRlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzYWxhcnlEYXRlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0uZm9ybS5zYWxhcnlEYXRlIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwic2FsYXJ5RGF0ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQudGFyZ2V0LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaGFzLWVycm9yXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgZm9ybTogX3ZtLmZvcm0sIGZpZWxkOiBcInNhbGFyeURhdGVcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC00XCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImxhYmVsXCIsIHsgYXR0cnM6IHsgZm9yOiBcInN0YXR1c1wiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS4kdChcIlN0YXR1c1wiKSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwic2VsZWN0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LW1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS5zdGF0dXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiZm9ybS5zdGF0dXNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmb3JtLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpcy1pbnZhbGlkXCI6IF92bS5mb3JtLmVycm9ycy5oYXMoXCJzdGF0dXNcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogXCJzdGF0dXNcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyICQkc2VsZWN0ZWRWYWwgPSBBcnJheS5wcm90b3R5cGUuZmlsdGVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNhbGwoJGV2ZW50LnRhcmdldC5vcHRpb25zLCBmdW5jdGlvbiAobykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG8uc2VsZWN0ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKG8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2YWwgPSBcIl92YWx1ZVwiIGluIG8gPyBvLl92YWx1ZSA6IG8udmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ybSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInN0YXR1c1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC50YXJnZXQubXVsdGlwbGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJCRzZWxlY3RlZFZhbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAkJHNlbGVjdGVkVmFsWzBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwib3B0aW9uXCIsIHsgYXR0cnM6IHsgdmFsdWU6IFwiMVwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJBY3RpdmVcIikpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwib3B0aW9uXCIsIHsgYXR0cnM6IHsgdmFsdWU6IFwiMFwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJJbmFjdGl2ZVwiKSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaGFzLWVycm9yXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgZm9ybTogX3ZtLmZvcm0sIGZpZWxkOiBcInN0YXR1c1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImZvcm0tZ3JvdXBcIiB9LFxuICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgX2MoXCJsYWJlbFwiLCB7IGF0dHJzOiB7IGZvcjogXCJub3RlXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS4kdChcIk5vdGVcIikpKSxcbiAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgIF9jKFwidGV4dGFyZWFcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1tb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS5ub3RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiZm9ybS5ub3RlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZm9ybS1jb250cm9sXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogeyBcImlzLWludmFsaWRcIjogX3ZtLmZvcm0uZXJyb3JzLmhhcyhcIm5vdGVcIikgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcIm5vdGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IF92bS4kdChcIldyaXRlIHlvdXIgbm90ZSBoZXJlIVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLmZvcm0ubm90ZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVyblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5mb3JtLCBcIm5vdGVcIiwgJGV2ZW50LnRhcmdldC52YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICBfYyhcImhhcy1lcnJvclwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBmb3JtOiBfdm0uZm9ybSwgZmllbGQ6IFwibm90ZVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZm9ybS1ncm91cFwiIH0sXG4gICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICBfYyhcImxhYmVsXCIsIHsgYXR0cnM6IHsgZm9yOiBcImltYWdlXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS4kdChcIkltYWdlXCIpKSksXG4gICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImN1c3RvbS1maWxlXCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImN1c3RvbS1maWxlLWlucHV0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7IFwiaXMtaW52YWxpZFwiOiBfdm0uZm9ybS5lcnJvcnMuaGFzKFwiaW1hZ2VcIikgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6IFwiaW1hZ2VcIiwgdHlwZTogXCJmaWxlXCIsIG5hbWU6IFwiaW1hZ2VcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogeyBjaGFuZ2U6IF92bS5vbkZpbGVDaGFuZ2UgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhYmVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJjdXN0b20tZmlsZS1sYWJlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcjogXCJpbWFnZVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKF92bS4kdChcIkNob29zZSBmaWxlXCIpKSldXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgX2MoXCJoYXMtZXJyb3JcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgZm9ybTogX3ZtLmZvcm0sIGZpZWxkOiBcImltYWdlXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiYmctbGlnaHQgbXQtNCB3LTI1XCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnVybFxuICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwiaW1nXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImltZy1mbHVpZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiBfdm0udXJsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHQ6IF92bS4kdChcIkF0dGFjaGVkIEltYWdlXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJjYXJkLWZvb3RlclwiIH0sXG4gICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgIFwidi1idXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJidG4gYnRuLXByaW1hcnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGxvYWRpbmc6IF92bS5mb3JtLmJ1c3kgfSxcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaVwiLCB7IHN0YXRpY0NsYXNzOiBcImZhcyBmYS1zYXZlXCIgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIgKyBfdm0uX3MoX3ZtLiR0KFwiU2F2ZVwiKSkgKyBcIlxcbiAgICAgICAgICAgIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgIFwiYnV0dG9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiYnRuIGJ0bi1zZWNvbmRhcnkgZmxvYXQtcmlnaHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6IFwicmVzZXRcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmZvcm0ucmVzZXQoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaVwiLCB7IHN0YXRpY0NsYXNzOiBcImZhcyBmYS1wb3dlci1vZmZcIiB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCIgXCIgKyBfdm0uX3MoX3ZtLiR0KFwiUmVzZXRcIikpICsgXCJcXG4gICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICksXG4gICAgICAgICAgXSksXG4gICAgICAgIF0pLFxuICAgICAgXSksXG4gICAgXSxcbiAgICAxXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/payroll/create.vue?vue&type=template&id=704493cf\n");

/***/ }),

/***/ "./resources/js/pages/payroll/create.vue":
/*!***********************************************!*\
  !*** ./resources/js/pages/payroll/create.vue ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _create_vue_vue_type_template_id_704493cf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create.vue?vue&type=template&id=704493cf */ \"./resources/js/pages/payroll/create.vue?vue&type=template&id=704493cf\");\n/* harmony import */ var _create_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create.vue?vue&type=script&lang=js */ \"./resources/js/pages/payroll/create.vue?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _create_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _create_vue_vue_type_template_id_704493cf__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _create_vue_vue_type_template_id_704493cf__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"resources/js/pages/payroll/create.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvcGF5cm9sbC9jcmVhdGUudnVlP2I5NzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBb0Y7QUFDM0I7QUFDTDs7O0FBR3BEO0FBQ2dHO0FBQ2hHLGdCQUFnQiwyR0FBVTtBQUMxQixFQUFFLDJFQUFNO0FBQ1IsRUFBRSxnRkFBTTtBQUNSLEVBQUUseUZBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxJQUFJLEtBQVUsRUFBRSxZQWlCZjtBQUNEO0FBQ2UsZ0YiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvcGF5cm9sbC9jcmVhdGUudnVlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9jcmVhdGUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTcwNDQ5M2NmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vY3JlYXRlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9jcmVhdGUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIi9Vc2Vycy9tb2hhbWVkYWJkdWxrYWJpYS9EZXNrdG9wL0ZpbmFuY2UvZmluYWljZS9ub2RlX21vZHVsZXMvdnVlLWhvdC1yZWxvYWQtYXBpL2Rpc3QvaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCc3MDQ0OTNjZicpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCc3MDQ0OTNjZicsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCc3MDQ0OTNjZicsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vY3JlYXRlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03MDQ0OTNjZlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJzcwNDQ5M2NmJywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJyZXNvdXJjZXMvanMvcGFnZXMvcGF5cm9sbC9jcmVhdGUudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/pages/payroll/create.vue\n");

/***/ }),

/***/ "./resources/js/pages/payroll/create.vue?vue&type=script&lang=js":
/*!***********************************************************************!*\
  !*** ./resources/js/pages/payroll/create.vue?vue&type=script&lang=js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./create.vue?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/payroll/create.vue?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvcGF5cm9sbC9jcmVhdGUudnVlPzVlMjYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBLHdDQUEyTCxDQUFnQixpUEFBRyxFQUFDIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL3BhZ2VzL3BheXJvbGwvY3JlYXRlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNC0wIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vY3JlYXRlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTQtMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2NyZWF0ZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/pages/payroll/create.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./resources/js/pages/payroll/create.vue?vue&type=template&id=704493cf":
/*!*****************************************************************************!*\
  !*** ./resources/js/pages/payroll/create.vue?vue&type=template&id=704493cf ***!
  \*****************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_template_id_704493cf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../node_modules/vue-loader/lib??vue-loader-options!./create.vue?vue&type=template&id=704493cf */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/payroll/create.vue?vue&type=template&id=704493cf\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_template_id_704493cf__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_template_id_704493cf__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvcGF5cm9sbC9jcmVhdGUudnVlP2JhZDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL3BhZ2VzL3BheXJvbGwvY3JlYXRlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03MDQ0OTNjZi5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTQtMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/cmVmLS02IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vY3JlYXRlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03MDQ0OTNjZlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/pages/payroll/create.vue?vue&type=template&id=704493cf\n");

/***/ })

}]);