(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[169],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/setup/general.vue?vue&type=script&lang=js":
/*!******************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/setup/general.vue?vue&type=script&lang=js ***!
  \******************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vform */ \"./node_modules/vform/dist/vform.es.js\");\n/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vuex */ \"./node_modules/vuex/dist/vuex.esm.js\");\n/* harmony import */ var _plugins_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ~/plugins/i18n */ \"./resources/js/plugins/i18n.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_3__);\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  middleware: [\"auth\", \"check-permissions\"],\n  metaInfo: function metaInfo() {\n    return {\n      title: this.$t(\"General Settings\")\n    };\n  },\n  data: function data() {\n    return {\n      allClients: [],\n      allAccounts: [],\n      allVatRates: [],\n      breadcrumbsCurrent: \"General Settings\",\n      breadcrumbs: [{\n        name: \"Dashboard\",\n        url: \"home\"\n      }, {\n        name: \"Setup\",\n        url: \"setup.index\"\n      }, {\n        name: \"Update general settings\",\n        url: \"\"\n      }],\n      form: new vform__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        companyName: \"\",\n        companyTagline: \"\",\n        emailAddress: \"\",\n        phoneNumber: \"\",\n        address: \"\",\n        clientPrefix: \"\",\n        supplierPrefix: \"\",\n        employeePrefix: \"\",\n        proCatPrefix: \"\",\n        proSubCatPrefix: \"\",\n        productPrefix: \"\",\n        expCatPrefix: \"\",\n        expSubCatPrefix: \"\",\n        purchasePrefix: \"\",\n        purchaseReturnPrefix: \"\",\n        quotationPrefix: \"\",\n        invoicePrefix: \"\",\n        invoiceReturnPrefix: \"\",\n        adjustmentPrefix: \"\",\n        currency: \"\",\n        language: \"en\",\n        copyrightText: \"\",\n        invoiceThankYouMessage: \"\",\n        taxRegistrationNumber: \"\",\n        logo: \"\",\n        blackLogo: \"\",\n        smallLogo: \"\",\n        favicon: \"\",\n        defaultClient: \"\",\n        defaultAccount: \"\",\n        defaultVatRate: \"\"\n      }),\n      logo: \"\",\n      blackLogo: \"\",\n      smallLogo: \"\",\n      favicon: \"\",\n      isDemoMode: window.config.isDemoMode\n    };\n  },\n  computed: Object(vuex__WEBPACK_IMPORTED_MODULE_1__[\"mapGetters\"])({\n    appInfo: \"operations/appInfo\",\n    items: \"operations/items\",\n    locales: 'lang/locales'\n  }),\n  created: function created() {\n    this.getVatRates();\n    this.getCurrencies();\n    this.getClients();\n    this.getAccounts();\n    this.assignValues();\n  },\n  methods: {\n    // get all product categories\n    getCurrencies: function getCurrencies() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.n = 1;\n              return _this.$store.dispatch(\"operations/allData\", {\n                path: \"/api/all-currencies\"\n              });\n            case 1:\n              return _context.a(2);\n          }\n        }, _callee);\n      }))();\n    },\n    // get all clients\n    getClients: function getClients() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.n = 1;\n              return axios__WEBPACK_IMPORTED_MODULE_3___default.a.get(\"/api/all-clients\").then(function (response) {\n                _this2.allClients = response.data.data;\n                // assign default client\n                if (_this2.allClients && _this2.allClients.length > 0) {\n                  var defaultClientSlug = _this2.appInfo.defaultClientSlug;\n                  _this2.form.defaultClient = _this2.allClients.find(function (client) {\n                    return client.slug === defaultClientSlug;\n                  });\n                }\n              });\n            case 1:\n              return _context2.a(2);\n          }\n        }, _callee2);\n      }))();\n    },\n    // get all accounts\n    getAccounts: function getAccounts() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _context3.n = 1;\n              return axios__WEBPACK_IMPORTED_MODULE_3___default.a.get(\"/api/all-accounts\").then(function (response) {\n                _this3.allAccounts = response.data.data;\n                // assign default account\n                if (_this3.allAccounts && _this3.allAccounts.length > 0) {\n                  var defaultAccountSlug = _this3.appInfo.defaultAccountSlug;\n                  _this3.form.defaultAccount = _this3.allAccounts.find(function (account) {\n                    return account.slug === defaultAccountSlug;\n                  });\n                }\n              });\n            case 1:\n              return _context3.a(2);\n          }\n        }, _callee3);\n      }))();\n    },\n    // get all vat rates\n    getVatRates: function getVatRates() {\n      var _this4 = this;\n      axios__WEBPACK_IMPORTED_MODULE_3___default.a.get(\"/api/all-vat-rates\").then(function (response) {\n        _this4.allVatRates = response.data.data;\n        // assign default vat rate\n        if (_this4.allVatRates && _this4.allVatRates.length > 0) {\n          var defaultVatRateSlug = _this4.appInfo.defaultVatRateSlug;\n          _this4.form.defaultVatRate = _this4.allVatRates.find(function (tax) {\n            return tax.slug === defaultVatRateSlug;\n          });\n        }\n      });\n    },\n    // assign values\n    assignValues: function assignValues() {\n      if (this.appInfo) {\n        this.form.companyName = this.appInfo.companyName;\n        this.form.companyTagline = this.appInfo.companyTagline;\n        this.form.emailAddress = this.appInfo.email;\n        this.form.phoneNumber = this.appInfo.phone;\n        this.form.address = this.appInfo.address;\n        this.form.clientPrefix = this.appInfo.clientPrefix;\n        this.form.supplierPrefix = this.appInfo.supplierPrefix;\n        this.form.employeePrefix = this.appInfo.employeePrefix;\n        this.form.proCatPrefix = this.appInfo.proCatPrefix;\n        this.form.proSubCatPrefix = this.appInfo.proSubCatPrefix;\n        this.form.productPrefix = this.appInfo.productPrefix;\n        this.form.expCatPrefix = this.appInfo.expCatPrefix;\n        this.form.expSubCatPrefix = this.appInfo.expSubCatPrefix;\n        this.form.purchasePrefix = this.appInfo.purchasePrefix;\n        this.form.purchaseReturnPrefix = this.appInfo.purchaseReturnPrefix;\n        this.form.quotationPrefix = this.appInfo.quotationPrefix;\n        this.form.invoicePrefix = this.appInfo.invoicePrefix;\n        this.form.invoiceReturnPrefix = this.appInfo.invoiceReturnPrefix;\n        this.form.adjustmentPrefix = this.appInfo.adjustmentPrefix;\n        this.form.currency = this.appInfo.currency;\n        this.form.language = this.appInfo.language;\n        this.logo = this.appInfo.logo;\n        this.blackLogo = this.appInfo.blackLogo;\n        this.smallLogo = this.appInfo.smallLogo;\n        this.favicon = this.appInfo.favicon;\n        this.form.copyrightText = this.appInfo.copyright;\n        this.form.invoiceThankYouMessage = this.appInfo.invoiceThankYouMessage;\n        this.form.taxRegistrationNumber = this.appInfo.taxRegistrationNumber;\n      }\n    },\n    // vue logo upload\n    onLogoChange: function onLogoChange(e) {\n      var _this5 = this;\n      var file = e.target.files[0];\n      var reader = new FileReader();\n      if (file.size < 2111775 && (file.type === \"image/jpeg\" || file.type === \"image/png\" || file.type === \"image/gif\" || file.type === \"image/svg\" || file.type === \"image/svg+xml\")) {\n        reader.onloadend = function (file) {\n          _this5.form.logo = reader.result;\n        };\n        reader.readAsDataURL(file);\n        this.logo = URL.createObjectURL(file);\n      } else {\n        Swal.fire(this.$t(\"Error!\"), this.$t(\"Please select a valid thumbnail with size less than 2 MB\"), \"error\");\n      }\n    },\n    // vue black logo upload\n    onBlackLogoChange: function onBlackLogoChange(e) {\n      var _this6 = this;\n      var file = e.target.files[0];\n      var reader = new FileReader();\n      if (file.size < 2111775 && (file.type === \"image/jpeg\" || file.type === \"image/png\" || file.type === \"image/gif\" || file.type === \"image/svg\" || file.type === \"image/svg+xml\")) {\n        reader.onloadend = function (file) {\n          _this6.form.blackLogo = reader.result;\n        };\n        reader.readAsDataURL(file);\n        this.blackLogo = URL.createObjectURL(file);\n      } else {\n        Swal.fire(this.$t(\"Error!\"), this.$t(\"Please select a valid thumbnail with size less than 2 MB\"), \"error\");\n      }\n    },\n    // vue small logo upload\n    onSmallLogoChange: function onSmallLogoChange(e) {\n      var _this7 = this;\n      var file = e.target.files[0];\n      var reader = new FileReader();\n      if (file.size < 2111775 && (file.type === \"image/jpeg\" || file.type === \"image/png\" || file.type === \"image/gif\" || file.type === \"image/svg\" || file.type === \"image/svg+xml\")) {\n        reader.onloadend = function (file) {\n          _this7.form.smallLogo = reader.result;\n        };\n        reader.readAsDataURL(file);\n        this.smallLogo = URL.createObjectURL(file);\n      } else {\n        Swal.fire(this.$t(\"Error!\"), this.$t(\"Please select a valid thumbnail with size less than 2 MB\"), \"error\");\n      }\n    },\n    // vue favicon upload\n    onFaviconChange: function onFaviconChange(e) {\n      var _this8 = this;\n      var file = e.target.files[0];\n      var reader = new FileReader();\n      if (file.size < 2111775 && (file.type === \"image/jpeg\" || file.type === \"image/png\" || file.type === \"image/gif\" || file.type === \"image/svg\" || file.type === \"image/svg+xml\")) {\n        reader.onloadend = function (file) {\n          _this8.form.favicon = reader.result;\n        };\n        reader.readAsDataURL(file);\n        this.favicon = URL.createObjectURL(file);\n      } else {\n        Swal.fire(this.$t(\"Error!\"), this.$t(\"Please select a valid thumbnail with size less than 2 MB\"), \"error\");\n      }\n    },\n    // update settings\n    updateSettings: function updateSettings() {\n      var _this9 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var locale;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              // update locale\n              locale = _this9.form.language;\n              if (_this9.$i18n.locale !== locale) {\n                Object(_plugins_i18n__WEBPACK_IMPORTED_MODULE_2__[\"loadMessages\"])(locale);\n                _this9.$store.dispatch(\"lang/setLocale\", {\n                  locale: locale\n                });\n              }\n              if (_this9.isDemoMode) {\n                _context4.n = 2;\n                break;\n              }\n              _context4.n = 1;\n              return _this9.form.post(window.location.origin + \"/api/update-settings\").then(function () {\n                toast.fire({\n                  type: \"success\",\n                  title: _this9.$t(\"Settings updated successfully\")\n                });\n                window.location.reload();\n              })[\"catch\"](function () {\n                toast.fire({\n                  type: \"error\",\n                  title: _this9.$t(\"Opps...something went wrong\")\n                });\n              });\n            case 1:\n              _context4.n = 3;\n              break;\n            case 2:\n              toast.fire({\n                type: \"warning\",\n                title: _this9.$t(\"You are not allowed to do this in demo version.\")\n              });\n            case 3:\n              return _context4.a(2);\n          }\n        }, _callee4);\n      }))();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/setup/general.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/setup/general.vue?vue&type=template&id=7cfa81bd":
/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/setup/general.vue?vue&type=template&id=7cfa81bd ***!
  \****************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", [_c(\"breadcrumbs\", {\n    attrs: {\n      items: _vm.breadcrumbs,\n      current: _vm.breadcrumbsCurrent\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"col-12 col-xl-3\"\n  }, [_c(\"SettingsSidebar\")], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"col-12 col-xl-9\"\n  }, [_c(\"form\", {\n    attrs: {\n      role: \"form\"\n    },\n    on: {\n      submit: function submit($event) {\n        $event.preventDefault();\n        return _vm.updateSettings.apply(null, arguments);\n      },\n      keydown: function keydown($event) {\n        return _vm.form.onKeydown($event);\n      }\n    }\n  }, [_c(\"div\", {\n    staticClass: \"card\"\n  }, [_c(\"div\", {\n    staticClass: \"card-header setings-header\"\n  }, [_c(\"h3\", {\n    staticClass: \"card-title\"\n  }, [_vm._v(\"\\n                \" + _vm._s(_vm.$t(\"General Settings\")) + \"\\n              \")])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"card-body\"\n  }, [_c(\"strong\", [_vm._v(_vm._s(_vm.$t(\"Add Your Company Information\")))]), _vm._v(\" \"), _c(\"hr\"), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"companyName\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Company Name\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.companyName,\n      expression: \"form.companyName\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"companyName\")\n    },\n    attrs: {\n      id: \"companyName\",\n      type: \"text\",\n      name: \"companyName\",\n      placeholder: _vm.$t(\"Enter a company name\")\n    },\n    domProps: {\n      value: _vm.form.companyName\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"companyName\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"companyName\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"companyTagline\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Company Tagline\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.companyTagline,\n      expression: \"form.companyTagline\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"companyTagline\")\n    },\n    attrs: {\n      id: \"companyTagline\",\n      type: \"text\",\n      name: \"companyTagline\",\n      placeholder: _vm.$t(\"Company Tagline\")\n    },\n    domProps: {\n      value: _vm.form.companyTagline\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"companyTagline\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"companyTagline\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"emailAddress\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Email Address\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.emailAddress,\n      expression: \"form.emailAddress\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"emailAddress\")\n    },\n    attrs: {\n      id: \"emailAddress\",\n      type: \"email\",\n      name: \"emailAddress\",\n      placeholder: _vm.$t(\"Enter an email address\")\n    },\n    domProps: {\n      value: _vm.form.emailAddress\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"emailAddress\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"emailAddress\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"phoneNumber\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Phone Number\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.phoneNumber,\n      expression: \"form.phoneNumber\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"phoneNumber\")\n    },\n    attrs: {\n      id: \"phoneNumber\",\n      type: \"text\",\n      name: \"phoneNumber\",\n      placeholder: _vm.$t(\"Phone Number\")\n    },\n    domProps: {\n      value: _vm.form.phoneNumber\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"phoneNumber\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"name\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"address\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Address\")))]), _vm._v(\" \"), _c(\"textarea\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.address,\n      expression: \"form.address\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"address\")\n    },\n    attrs: {\n      id: \"address\",\n      placeholder: _vm.$t(\"Enter an address\")\n    },\n    domProps: {\n      value: _vm.form.address\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"address\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"address\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"br\"), _vm._v(\" \"), _c(\"strong\", [_vm._v(_vm._s(_vm.$t(\"Add the code prefixes\")))]), _vm._v(\" \"), _c(\"hr\"), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"clientPrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Client Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.clientPrefix,\n      expression: \"form.clientPrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"clientPrefix\")\n    },\n    attrs: {\n      id: \"clientPrefix\",\n      type: \"text\",\n      name: \"clientPrefix\",\n      placeholder: _vm.$t(\"Enter a client prefix\")\n    },\n    domProps: {\n      value: _vm.form.clientPrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"clientPrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"clientPrefix\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"supplierPrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Supplier Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.supplierPrefix,\n      expression: \"form.supplierPrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"supplierPrefix\")\n    },\n    attrs: {\n      id: \"supplierPrefix\",\n      type: \"text\",\n      name: \"supplierPrefix\",\n      placeholder: _vm.$t(\"Enter a supplier prefix\")\n    },\n    domProps: {\n      value: _vm.form.supplierPrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"supplierPrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"supplierPrefix\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"employeePrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Employee Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.employeePrefix,\n      expression: \"form.employeePrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"employeePrefix\")\n    },\n    attrs: {\n      id: \"employeePrefix\",\n      type: \"text\",\n      name: \"employeePrefix\",\n      placeholder: _vm.$t(\"Enter an employee prefix\")\n    },\n    domProps: {\n      value: _vm.form.employeePrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"employeePrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"employeePrefix\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"proCatPrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Item Category Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.proCatPrefix,\n      expression: \"form.proCatPrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"proCatPrefix\")\n    },\n    attrs: {\n      id: \"proCatPrefix\",\n      type: \"text\",\n      name: \"proCatPrefix\",\n      placeholder: _vm.$t(\"Enter an item category prefix\")\n    },\n    domProps: {\n      value: _vm.form.proCatPrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"proCatPrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"proCatPrefix\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"proSubCatPrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Item Sub Category Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.proSubCatPrefix,\n      expression: \"form.proSubCatPrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"proSubCatPrefix\")\n    },\n    attrs: {\n      id: \"proSubCatPrefix\",\n      type: \"text\",\n      name: \"proSubCatPrefix\",\n      placeholder: _vm.$t(\"Enter a sub Category Prefix\")\n    },\n    domProps: {\n      value: _vm.form.proSubCatPrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"proSubCatPrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"proSubCatPrefix\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"productPrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Item Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.productPrefix,\n      expression: \"form.productPrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"productPrefix\")\n    },\n    attrs: {\n      id: \"productPrefix\",\n      type: \"text\",\n      name: \"productPrefix\",\n      placeholder: _vm.$t(\"Enter an item prefix\")\n    },\n    domProps: {\n      value: _vm.form.productPrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"productPrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"productPrefix\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-lg-6 col-xl-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"expCatPrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Expense Category Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.expCatPrefix,\n      expression: \"form.expCatPrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"expCatPrefix\")\n    },\n    attrs: {\n      id: \"expCatPrefix\",\n      type: \"text\",\n      name: \"expCatPrefix\",\n      placeholder: _vm.$t(\"Enter an expense category prefix\")\n    },\n    domProps: {\n      value: _vm.form.expCatPrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"expCatPrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"expCatPrefix\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-lg-6 col-xl-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"expSubCatPrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Expense Sub Category Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.expSubCatPrefix,\n      expression: \"form.expSubCatPrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"expSubCatPrefix\")\n    },\n    attrs: {\n      id: \"expSubCatPrefix\",\n      type: \"text\",\n      name: \"expSubCatPrefix\",\n      placeholder: _vm.$t(\"Enter an expense sub category prefix\")\n    },\n    domProps: {\n      value: _vm.form.expSubCatPrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"expSubCatPrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"expSubCatPrefix\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-lg-6 col-xl-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"purchasePrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Purchase Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.purchasePrefix,\n      expression: \"form.purchasePrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"purchasePrefix\")\n    },\n    attrs: {\n      id: \"purchasePrefix\",\n      type: \"text\",\n      name: \"purchasePrefix\",\n      placeholder: _vm.$t(\"Enter a purchase prefix\")\n    },\n    domProps: {\n      value: _vm.form.purchasePrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"purchasePrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"purchasePrefix\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-lg-6 col-xl-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"purchaseReturnPrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Purchase Return Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.purchaseReturnPrefix,\n      expression: \"form.purchaseReturnPrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"purchaseReturnPrefix\")\n    },\n    attrs: {\n      id: \"purchaseReturnPrefix\",\n      type: \"text\",\n      name: \"purchaseReturnPrefix\",\n      placeholder: _vm.$t(\"Enter a purchase return prefix\")\n    },\n    domProps: {\n      value: _vm.form.purchaseReturnPrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"purchaseReturnPrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"purchaseReturnPrefix\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-lg-6 col-xl-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"quotationPrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Quotation Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.quotationPrefix,\n      expression: \"form.quotationPrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"quotationPrefix\")\n    },\n    attrs: {\n      id: \"quotationPrefix\",\n      type: \"text\",\n      name: \"quotationPrefix\",\n      placeholder: _vm.$t(\"Enter a quotation prefix\")\n    },\n    domProps: {\n      value: _vm.form.quotationPrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"quotationPrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"quotationPrefix\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-lg-6 col-xl-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"invoicePrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Invoice Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.invoicePrefix,\n      expression: \"form.invoicePrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"invoicePrefix\")\n    },\n    attrs: {\n      id: \"invoicePrefix\",\n      type: \"text\",\n      name: \"invoicePrefix\",\n      placeholder: _vm.$t(\"Enter an invoice prefix\")\n    },\n    domProps: {\n      value: _vm.form.invoicePrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"invoicePrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"invoicePrefix\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-lg-6 col-xl-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"invoiceReturnPrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Invoice Return Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.invoiceReturnPrefix,\n      expression: \"form.invoiceReturnPrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"invoiceReturnPrefix\")\n    },\n    attrs: {\n      id: \"invoiceReturnPrefix\",\n      type: \"text\",\n      name: \"invoiceReturnPrefix\",\n      placeholder: _vm.$t(\"Enter an invoice return prefix\")\n    },\n    domProps: {\n      value: _vm.form.invoiceReturnPrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"invoiceReturnPrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"invoiceReturnPrefix\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-lg-6 col-xl-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"adjustmentPrefix\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Inventory Adjustment Prefix\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.adjustmentPrefix,\n      expression: \"form.adjustmentPrefix\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"adjustmentPrefix\")\n    },\n    attrs: {\n      id: \"adjustmentPrefix\",\n      type: \"text\",\n      name: \"adjustmentPrefix\",\n      placeholder: _vm.$t(\"Enter an inventory adjustment prefix\")\n    },\n    domProps: {\n      value: _vm.form.adjustmentPrefix\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"adjustmentPrefix\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"adjustmentPrefix\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"br\"), _vm._v(\" \"), _c(\"strong\", [_vm._v(_vm._s(_vm.$t(\"Add your default elements\")))]), _vm._v(\" \"), _c(\"hr\"), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_vm.items ? _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"currency\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Default Currency\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"currency\")\n    },\n    attrs: {\n      options: _vm.items,\n      label: \"label\",\n      name: \"currency\",\n      placeholder: _vm.$t(\"Select a currency\")\n    },\n    model: {\n      value: _vm.form.currency,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"currency\", $$v);\n      },\n      expression: \"form.currency\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"currency\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"language\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Default Language\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"select\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.language,\n      expression: \"form.language\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"language\")\n    },\n    attrs: {\n      name: \"\"\n    },\n    on: {\n      change: function change($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.form, \"language\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }\n    }\n  }, _vm._l(_vm.locales, function (value, key) {\n    return _c(\"option\", {\n      key: key,\n      domProps: {\n        value: key\n      }\n    }, [_vm._v(\"\\n                          \" + _vm._s(value[1]) + \"\\n                      \")]);\n  }), 0), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"language\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"taxRegistrationNumber\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Tax Registration Number\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.taxRegistrationNumber,\n      expression: \"form.taxRegistrationNumber\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"taxRegistrationNumber\")\n    },\n    attrs: {\n      id: \"taxRegistrationNumber\",\n      type: \"taxRegistrationNumber\",\n      name: \"taxRegistrationNumber\",\n      placeholder: _vm.$t(\"Enter a tax registration number\")\n    },\n    domProps: {\n      value: _vm.form.taxRegistrationNumber\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"taxRegistrationNumber\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"taxRegistrationNumber\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [this.allClients ? _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"client\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Default Client\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"defaultClient\")\n    },\n    attrs: {\n      options: this.allClients,\n      label: \"name\",\n      name: \"client\",\n      placeholder: _vm.$t(\"Select a client\")\n    },\n    model: {\n      value: _vm.form.defaultClient,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"defaultClient\", $$v);\n      },\n      expression: \"form.defaultClient\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"defaultClient\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), this.allAccounts ? _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"client\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Default Account\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"defaultAccount\")\n    },\n    attrs: {\n      options: _vm.allAccounts,\n      label: \"bankName\",\n      name: \"account\",\n      placeholder: _vm.$t(\"Select a account\")\n    },\n    model: {\n      value: _vm.form.defaultAccount,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"defaultAccount\", $$v);\n      },\n      expression: \"form.defaultAccount\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"defaultAccount\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), this.allVatRates ? _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"vatRate\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Default Tax Rate\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"defaultVatRate\")\n    },\n    attrs: {\n      options: this.allVatRates,\n      label: \"name\",\n      name: \"vatRate\",\n      placeholder: _vm.$t(\"Select a Tax Rate\")\n    },\n    model: {\n      value: _vm.form.defaultVatRate,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"defaultVatRate\", $$v);\n      },\n      expression: \"form.defaultVatRate\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"defaultVatRate\"\n    }\n  })], 1) : _vm._e()]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"logo\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"White Logo\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"custom-file\"\n  }, [_c(\"input\", {\n    staticClass: \"custom-file-input\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"logo\")\n    },\n    attrs: {\n      id: \"logo\",\n      type: \"file\",\n      name: \"logo\"\n    },\n    on: {\n      change: _vm.onLogoChange\n    }\n  }), _vm._v(\" \"), _c(\"label\", {\n    staticClass: \"custom-file-label\",\n    attrs: {\n      \"for\": \"logo\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Choose file\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"logo\"\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bg-light mt-4 w-25\"\n  }, [_vm.logo ? _c(\"img\", {\n    staticClass: \"img-fluid\",\n    attrs: {\n      src: _vm.logo,\n      alt: \"Logo\"\n    }\n  }) : _vm._e()])], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"blackLogo\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Black Logo\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"custom-file\"\n  }, [_c(\"input\", {\n    staticClass: \"custom-file-input\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"blackLogo\")\n    },\n    attrs: {\n      id: \"blackLogo\",\n      type: \"file\",\n      name: \"blackLogo\"\n    },\n    on: {\n      change: _vm.onBlackLogoChange\n    }\n  }), _vm._v(\" \"), _c(\"label\", {\n    staticClass: \"custom-file-label\",\n    attrs: {\n      \"for\": \"blackLogo\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Choose file\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"blackLogo\"\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bg-light mt-4 w-25\"\n  }, [_vm.blackLogo ? _c(\"img\", {\n    staticClass: \"img-fluid\",\n    attrs: {\n      src: _vm.blackLogo,\n      alt: \"Black Logo\"\n    }\n  }) : _vm._e()])], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"smallLogo\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Small Logo\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"custom-file\"\n  }, [_c(\"input\", {\n    staticClass: \"custom-file-input\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"smallLogo\")\n    },\n    attrs: {\n      id: \"smallLogo\",\n      type: \"file\",\n      name: \"smallLogo\"\n    },\n    on: {\n      change: _vm.onSmallLogoChange\n    }\n  }), _vm._v(\" \"), _c(\"label\", {\n    staticClass: \"custom-file-label\",\n    attrs: {\n      \"for\": \"smallLogo\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Choose file\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"smallLogo\"\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bg-light mt-4 w-25\"\n  }, [_vm.smallLogo ? _c(\"img\", {\n    staticClass: \"img-fluid\",\n    attrs: {\n      src: _vm.smallLogo,\n      alt: \"Small Logo\"\n    }\n  }) : _vm._e()])], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"favicon\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Favicon\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"custom-file\"\n  }, [_c(\"input\", {\n    staticClass: \"custom-file-input\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"favicon\")\n    },\n    attrs: {\n      id: \"favicon\",\n      type: \"file\",\n      name: \"favicon\"\n    },\n    on: {\n      change: _vm.onFaviconChange\n    }\n  }), _vm._v(\" \"), _c(\"label\", {\n    staticClass: \"custom-file-label\",\n    attrs: {\n      \"for\": \"favicon\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Choose file\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"favicon\"\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bg-light mt-4 w-25\"\n  }, [_vm.favicon ? _c(\"img\", {\n    staticClass: \"img-fluid\",\n    attrs: {\n      src: _vm.favicon,\n      alt: \"Favicon\"\n    }\n  }) : _vm._e()])], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-12\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"copyrightText\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Invoice Thank You Message\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.invoiceThankYouMessage,\n      expression: \"form.invoiceThankYouMessage\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"invoiceThankYouMessage\")\n    },\n    attrs: {\n      id: \"invoiceThankYouMessage\",\n      type: \"text\",\n      name: \"invoiceThankYouMessage\"\n    },\n    domProps: {\n      value: _vm.form.invoiceThankYouMessage\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"invoiceThankYouMessage\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"invoiceThankYouMessage\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-12\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"copyrightText\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Copyright Text\")) + \"\\n                    \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.copyrightText,\n      expression: \"form.copyrightText\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"copyrightText\")\n    },\n    attrs: {\n      id: \"copyrightText\",\n      type: \"text\",\n      name: \"copyrightText\",\n      placeholder: \"$t('Copyright Text')\"\n    },\n    domProps: {\n      value: _vm.form.copyrightText\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"copyrightText\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"copyrightText\"\n    }\n  })], 1)])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"card-footer\"\n  }, [_c(\"v-button\", {\n    staticClass: \"btn btn-primary\",\n    attrs: {\n      loading: _vm.form.busy\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-edit\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"Save changes\")) + \"\\n              \")])], 1)])])])])], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/setup/general.vue?vue&type=template&id=7cfa81bd\n");

/***/ }),

/***/ "./resources/js/pages/setup/general.vue":
/*!**********************************************!*\
  !*** ./resources/js/pages/setup/general.vue ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _general_vue_vue_type_template_id_7cfa81bd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./general.vue?vue&type=template&id=7cfa81bd */ \"./resources/js/pages/setup/general.vue?vue&type=template&id=7cfa81bd\");\n/* harmony import */ var _general_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./general.vue?vue&type=script&lang=js */ \"./resources/js/pages/setup/general.vue?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _general_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _general_vue_vue_type_template_id_7cfa81bd__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _general_vue_vue_type_template_id_7cfa81bd__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"resources/js/pages/setup/general.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvc2V0dXAvZ2VuZXJhbC52dWU/NjEwOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFxRjtBQUMzQjtBQUNMOzs7QUFHckQ7QUFDZ0c7QUFDaEcsZ0JBQWdCLDJHQUFVO0FBQzFCLEVBQUUsNEVBQU07QUFDUixFQUFFLGlGQUFNO0FBQ1IsRUFBRSwwRkFBZTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLElBQUksS0FBVSxFQUFFLFlBaUJmO0FBQ0Q7QUFDZSxnRiIsImZpbGUiOiIuL3Jlc291cmNlcy9qcy9wYWdlcy9zZXR1cC9nZW5lcmFsLnZ1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vZ2VuZXJhbC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9N2NmYTgxYmRcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9nZW5lcmFsLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9nZW5lcmFsLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCIvVXNlcnMvbW9oYW1lZGFiZHVsa2FiaWEvRGVza3RvcC9GaW5hbmNlL2ZpbmFpY2Uvbm9kZV9tb2R1bGVzL3Z1ZS1ob3QtcmVsb2FkLWFwaS9kaXN0L2luZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnN2NmYTgxYmQnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnN2NmYTgxYmQnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnN2NmYTgxYmQnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL2dlbmVyYWwudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTdjZmE4MWJkXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignN2NmYTgxYmQnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInJlc291cmNlcy9qcy9wYWdlcy9zZXR1cC9nZW5lcmFsLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/pages/setup/general.vue\n");

/***/ }),

/***/ "./resources/js/pages/setup/general.vue?vue&type=script&lang=js":
/*!**********************************************************************!*\
  !*** ./resources/js/pages/setup/general.vue?vue&type=script&lang=js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_general_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./general.vue?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/setup/general.vue?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_general_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvc2V0dXAvZ2VuZXJhbC52dWU/M2NiZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUEsd0NBQTRMLENBQWdCLGtQQUFHLEVBQUMiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvc2V0dXAvZ2VuZXJhbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTQtMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2dlbmVyYWwudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNC0wIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZ2VuZXJhbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/pages/setup/general.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./resources/js/pages/setup/general.vue?vue&type=template&id=7cfa81bd":
/*!****************************************************************************!*\
  !*** ./resources/js/pages/setup/general.vue?vue&type=template&id=7cfa81bd ***!
  \****************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_general_vue_vue_type_template_id_7cfa81bd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../node_modules/vue-loader/lib??vue-loader-options!./general.vue?vue&type=template&id=7cfa81bd */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/setup/general.vue?vue&type=template&id=7cfa81bd\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_general_vue_vue_type_template_id_7cfa81bd__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_general_vue_vue_type_template_id_7cfa81bd__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvc2V0dXAvZ2VuZXJhbC52dWU/MjZmYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvc2V0dXAvZ2VuZXJhbC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9N2NmYTgxYmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS00LTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3JlZi0tNiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2dlbmVyYWwudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTdjZmE4MWJkXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/pages/setup/general.vue?vue&type=template&id=7cfa81bd\n");

/***/ })

}]);