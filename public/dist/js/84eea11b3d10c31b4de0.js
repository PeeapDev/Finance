(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[158],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js":
/*!************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js ***!
  \************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vuex */ \"./node_modules/vuex/dist/vuex.esm.js\");\n/* harmony import */ var vform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vform */ \"./node_modules/vform/dist/vform.es.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  middleware: ['auth', 'check-permissions'],\n  metaInfo: function metaInfo() {\n    return {\n      title: this.$t('Edit Invoice')\n    };\n  },\n  data: function data() {\n    return {\n      breadcrumbsCurrent: 'Edit Invoice',\n      breadcrumbs: [{\n        name: 'Dashboard',\n        url: 'home'\n      }, {\n        name: 'Invoices',\n        url: 'invoices.index'\n      }, {\n        name: 'Edit',\n        url: ''\n      }],\n      form: new vform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n        invoiceNo: '',\n        client: '',\n        reference: '',\n        selectedProducts: [],\n        subTotal: 0,\n        netTotal: 0,\n        discountType: 0,\n        discount: '',\n        discountPercentage: '',\n        totalDiscount: '',\n        transportCost: '',\n        orderTax: '',\n        totalTax: 0,\n        account: '',\n        totalPaid: '',\n        dueAmount: '',\n        clientAdvance: 0,\n        poReference: '',\n        paymentTerms: '',\n        deliveryPlace: '',\n        totalInvoiceReturn: 0,\n        note: '',\n        date: '',\n        status: 1\n      }),\n      products: '',\n      accounts: '',\n      taxes: '',\n      prefix: ''\n    };\n  },\n  computed: _objectSpread({}, Object(vuex__WEBPACK_IMPORTED_MODULE_0__[\"mapGetters\"])('operations', ['items', 'appInfo'])),\n  created: function created() {\n    this.getClients();\n    this.getTaxes();\n    this.getProducts();\n    this.getInvoice();\n    this.prefix = this.appInfo.productPrefix;\n  },\n  methods: {\n    // get all clients\n    getClients: function getClients() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.n = 1;\n              return _this.$store.dispatch('operations/allData', {\n                path: '/api/all-clients'\n              });\n            case 1:\n              return _context.a(2);\n          }\n        }, _callee);\n      }))();\n    },\n    // get taxes\n    getTaxes: function getTaxes() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _yield$axios$get, data;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.n = 1;\n              return axios__WEBPACK_IMPORTED_MODULE_2___default.a.get(window.location.origin + '/api/all-vat-rates');\n            case 1:\n              _yield$axios$get = _context2.v;\n              data = _yield$axios$get.data;\n              _this2.taxes = data.data;\n            case 2:\n              return _context2.a(2);\n          }\n        }, _callee2);\n      }))();\n    },\n    // get products\n    getProducts: function getProducts() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var _yield$axios$get2, data;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _context3.n = 1;\n              return axios__WEBPACK_IMPORTED_MODULE_2___default.a.get(window.location.origin + '/api/all-products');\n            case 1:\n              _yield$axios$get2 = _context3.v;\n              data = _yield$axios$get2.data;\n              _this3.products = data.data;\n              _this3.products.sort(_this3.sortProducts);\n            case 2:\n              return _context3.a(2);\n          }\n        }, _callee3);\n      }))();\n    },\n    // sort products\n    sortProducts: function sortProducts(a, b) {\n      if (Number(a.code) < Number(b.code)) {\n        return -1;\n      }\n      if (Number(a.code) > Number(b.code)) {\n        return 1;\n      }\n      return 0;\n    },\n    // get the invoice\n    getInvoice: function getInvoice() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var _yield$axios$get3, data;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              _context4.n = 1;\n              return axios__WEBPACK_IMPORTED_MODULE_2___default.a.get(window.location.origin + '/api/invoices/' + _this4.$route.params.slug);\n            case 1:\n              _yield$axios$get3 = _context4.v;\n              data = _yield$axios$get3.data;\n              _this4.form.invoiceNo = data.data.invoiceNo;\n              _this4.form.client = data.data.client;\n              _this4.form.reference = data.data.reference;\n              _this4.form.poReference = data.data.poReference;\n              _this4.form.paymentTerms = data.data.paymentTerms;\n              _this4.form.deliveryPlace = data.data.deliveryPlace;\n              _this4.form.date = data.data.invoiceDate;\n              _this4.form.note = data.data.note;\n              _this4.form.status = data.data.status;\n              _this4.form.transportCost = data.data.transport;\n              _this4.form.totalDiscount = data.data.discount;\n              _this4.form.discount = data.data.discountType == 0 ? data.data.discount : data.data.discountPercentage;\n              _this4.form.discountPercentage = data.data.discountPercentage;\n              _this4.form.discountType = data.data.discountType;\n              _this4.form.totalTax = data.data.tax;\n              _this4.form.orderTax = data.data.taxRate;\n              _this4.form.netTotal = Number(data.data.invoiceTotal);\n              _this4.form.subTotal = Number(data.data.subTotal);\n              _this4.form.totalPaid = Number(data.data.totalPaid);\n              _this4.form.dueAmount = Number(data.data.due);\n              _this4.form.totalInvoiceReturn = Number(data.data.totalInvoiceReturn);\n              _this4.form.selectedProducts = _this4.assignProducts(data.data.invoiceProducts);\n            case 2:\n              return _context4.a(2);\n          }\n        }, _callee4);\n      }))();\n    },\n    // store item in array\n    storeProduct: function storeProduct(product) {\n      var index = this.form.selectedProducts.findIndex(function (x) {\n        return x.id == product.id;\n      });\n      var quantity = 1;\n      if (index === -1) {\n        var productTax = product.taxType == 'Exclusive' ? product.priceWithDiscount * (product.taxRate / 100) : product.priceWithDiscount - product.priceWithDiscount / (1 + product.taxRate / 100);\n        var totalTax = productTax * quantity;\n        this.form.selectedProducts.unshift({\n          id: product.id,\n          itemType: product.itemType,\n          slug: product.slug,\n          name: product.name,\n          code: product.code,\n          taxType: product.taxType,\n          taxRate: product.taxRate,\n          qty: quantity,\n          oldQty: 0,\n          inventoryCount: product.inventoryCount,\n          avgPurchasePrice: product.avgPurchasePrice,\n          unitPrice: product.priceWithDiscount,\n          unitCost: product.taxType == 'Exclusive' ? product.priceWithDiscount + productTax : product.priceWithDiscount,\n          totalPrice: product.taxType == 'Exclusive' ? 1 * (product.priceWithDiscount + totalTax) : 1 * product.priceWithDiscount,\n          productTax: product.productTax > 0 ? product.productTax : 0,\n          totalTax: totalTax,\n          minQty: 1\n        });\n      }\n      this.generateItemTotal(quantity, 'qty', index, '');\n      return;\n    },\n    // update array\n    generateItemTotal: function generateItemTotal(value, type, index, action) {\n      var item = this.form.selectedProducts[index];\n      if (item) {\n        if (type == 'qty') {\n          item.qty = value;\n          if (action == 'increment') {\n            item.qty = Number(item.qty) + 1;\n          } else if (action == 'decrement') {\n            if (item.qty > 0) {\n              item.qty = Number(item.qty) - 1;\n            }\n          }\n        } else {\n          item.unitPrice = value;\n          if (action == 'increment') {\n            item.unitPrice = Number(item.unitPrice) + 1;\n          } else if (action == 'decrement') {\n            if (item.unitPrice > 0) {\n              item.unitPrice = Number(item.unitPrice) - 1;\n            }\n          }\n        }\n        item.productTax = item.taxType == 'Exclusive' ? item.unitPrice * (item.taxRate / 100) : item.unitPrice - item.unitPrice / (1 + item.taxRate / 100);\n        item.totalTax = item.productTax * item.qty;\n        item.totalPrice = item.taxType == 'Exclusive' ? item.qty * item.unitPrice + item.totalTax : item.qty * item.unitPrice;\n        item.unitCost = item.taxType == 'Exclusive' ? Number(item.unitPrice) + Number(item.productTax) : item.unitPrice;\n        this.form.selectedProducts[index] = item;\n      }\n      this.calculateSum();\n      return;\n    },\n    // remove item from array\n    removeItem: function removeItem(item) {\n      var index = this.form.selectedProducts.indexOf(item);\n      if (index > -1) {\n        this.form.selectedProducts.splice(index, 1);\n      }\n      this.calculateSum();\n      return;\n    },\n    // calculate sum\n    calculateSum: function calculateSum() {\n      // calculate subtotal\n      this.form.subTotal = this.form.selectedProducts.reduce(function (prev, cur) {\n        return Number((prev + cur.totalPrice).toFixed(2));\n      }, 0);\n\n      // calculate product tax\n      this.form.productTotalTax = this.form.selectedProducts.reduce(function (prev, cur) {\n        return Number((prev + cur.totalTax).toFixed(2));\n      }, 0);\n      this.form.netTotal = this.form.subTotal;\n\n      // calculate quatation tax\n      this.form.totalTax = 0;\n      if (this.form.orderTax) {\n        this.form.totalTax = this.form.orderTax.rate / 100 * this.form.subTotal;\n      }\n\n      // calculate discount and total\n      if (this.form.subTotal > 0) {\n        var discount = Number(this.form.discount);\n        if (this.form.discountType == 1) {\n          discount = discount / 100 * this.form.subTotal;\n          this.form.totalDiscount = Number(discount.toFixed(2));\n        } else {\n          discount = Number(this.form.discount);\n        }\n        this.form.netTotal = this.form.subTotal + Number(this.form.transportCost) - discount + this.form.totalTax;\n      }\n\n      // calculate due\n      var paid = Number(this.form.totalPaid);\n      if (paid <= this.form.netTotal) {\n        this.form.dueAmount = (this.form.netTotal - paid).toFixed(2);\n        this.form.clientAdvance = 0;\n      } else {\n        this.form.clientAdvance = paid - this.form.netTotal;\n        this.form.dueAmount = 0;\n      }\n      return;\n    },\n    // get order products\n    assignProducts: function assignProducts(products) {\n      this.form.selectedProducts = [];\n      for (var key in products) {\n        var invoiceItem = products[key];\n        this.form.selectedProducts.unshift({\n          id: invoiceItem.productID,\n          itemType: invoiceItem.productType,\n          slug: invoiceItem.productSlug,\n          name: invoiceItem.productName,\n          code: invoiceItem.productCode,\n          taxType: invoiceItem.taxType,\n          taxRate: invoiceItem.taxRate,\n          oldQty: invoiceItem.quantity,\n          qty: invoiceItem.quantity,\n          returnQty: invoiceItem.returnQty,\n          inventoryCount: invoiceItem.inventoryCount,\n          avgPurchasePrice: invoiceItem.purchasePrice,\n          unitPrice: invoiceItem.salePrice,\n          unitCost: invoiceItem.unitCost,\n          totalPrice: invoiceItem.unitCostTotal,\n          productTax: invoiceItem.unitTax,\n          totalTax: invoiceItem.taxTotal,\n          minQty: invoiceItem.returnQty\n        });\n      }\n      this.calculateSum();\n      return this.form.selectedProducts;\n    },\n    // update invoice\n    updateInvoice: function updateInvoice() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              _context5.n = 1;\n              return _this5.form.patch(window.location.origin + '/api/invoices/' + _this5.$route.params.slug).then(function (_ref) {\n                var data = _ref.data;\n                toast.fire({\n                  type: 'success',\n                  title: _this5.$t('Invoice updated successfully')\n                });\n                _this5.$router.push({\n                  name: 'invoices.show',\n                  params: {\n                    slug: data.data.slug\n                  }\n                });\n              })[\"catch\"](function () {\n                toast.fire({\n                  type: 'error',\n                  title: _this5.$t('Opps...something went wrong')\n                });\n              });\n            case 1:\n              return _context5.a(2);\n          }\n        }, _callee5);\n      }))();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true":
/*!**********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true ***!
  \**********************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", [_c(\"breadcrumbs\", {\n    attrs: {\n      items: _vm.breadcrumbs,\n      current: _vm.breadcrumbsCurrent\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"col-lg-12 col-xl-12\"\n  }, [_c(\"div\", {\n    staticClass: \"card\"\n  }, [_c(\"div\", {\n    staticClass: \"card-header\"\n  }, [_c(\"h3\", {\n    staticClass: \"card-title\"\n  }, [_vm._v(\"\\n            \" + _vm._s(_vm.$t(\"Edit Invoice\")) + \"\\n          \")]), _vm._v(\" \"), _c(\"router-link\", {\n    staticClass: \"btn btn-dark float-right\",\n    attrs: {\n      to: {\n        name: \"invoices.index\"\n      }\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-long-arrow-alt-left\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"Back\")) + \"\\n          \")])], 1), _vm._v(\" \"), _c(\"form\", {\n    attrs: {\n      role: \"form\"\n    },\n    on: {\n      submit: function submit($event) {\n        $event.preventDefault();\n        return _vm.updateInvoice.apply(null, arguments);\n      },\n      keydown: function keydown($event) {\n        return _vm.form.onKeydown($event);\n      }\n    }\n  }, [_c(\"div\", {\n    staticClass: \"card-body\"\n  }, [_vm.items ? _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"client\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Client\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"client\")\n    },\n    attrs: {\n      options: _vm.items,\n      label: \"name\",\n      name: \"client\",\n      placeholder: _vm.$t(\"Select a client\")\n    },\n    model: {\n      value: _vm.form.client,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"client\", $$v);\n      },\n      expression: \"form.client\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"client\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"reference\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Reference\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.reference,\n      expression: \"form.reference\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"reference\")\n    },\n    attrs: {\n      id: \"reference\",\n      type: \"text\",\n      name: \"reference\",\n      placeholder: _vm.$t(\"Enter reference\")\n    },\n    domProps: {\n      value: _vm.form.reference\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"reference\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"reference\"\n    }\n  })], 1)]) : _vm._e(), _vm._v(\" \"), _vm.products ? _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-12\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"product\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Select Items\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"selectedProducts\")\n    },\n    attrs: {\n      options: _vm.products,\n      label: \"label\",\n      name: \"product\",\n      placeholder: _vm.$t(\"Search Items\")\n    },\n    on: {\n      input: function input($event) {\n        return _vm.storeProduct(_vm.form.product);\n      }\n    },\n    model: {\n      value: _vm.form.product,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"product\", $$v);\n      },\n      expression: \"form.product\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"selectedProducts\"\n    }\n  })], 1)]) : _vm._e(), _vm._v(\" \"), _vm.form.selectedProducts && _vm.form.selectedProducts.length > 0 ? _c(\"div\", {\n    staticClass: \"row mt-3 mb-4\"\n  }, [_c(\"div\", {\n    staticClass: \"table-responsive table-custom w-95 m-auto\"\n  }, [_c(\"table\", {\n    staticClass: \"table table-hover table-sm text-center\"\n  }, [_c(\"thead\", [_c(\"tr\", [_c(\"th\", [_vm._v(_vm._s(_vm.$t(\"SL\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Code\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Item  Name\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Invoice Qty\")))]), _vm._v(\" \"), _vm.form.totalInvoiceReturn > 0 ? _c(\"th\", [_vm._v(\"\\n                        \" + _vm._s(_vm.$t(\"Return Qty\")) + \"\\n                      \")]) : _vm._e(), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Price\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Unit Price\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Tax\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Subtotal\")))]), _vm._v(\" \"), _c(\"th\", {\n    staticClass: \"text-right\"\n  }, [_vm._v(_vm._s(_vm.$t(\"Action\")))])])]), _vm._v(\" \"), _c(\"tbody\", [_vm._l(_vm.form.selectedProducts, function (item, i) {\n    return _c(\"tr\", {\n      key: i\n    }, [_c(\"td\", [_vm._v(_vm._s(++i))]), _vm._v(\" \"), _c(\"td\", [_vm._v(_vm._s(_vm._f(\"withPrefix\")(item.code, _vm.prefix)))]), _vm._v(\" \"), _c(\"td\", [_vm.$can(\"product-view\") ? _c(\"router-link\", {\n      attrs: {\n        to: {\n          name: \"products.show\",\n          params: {\n            slug: item.slug\n          }\n        }\n      }\n    }, [_vm._v(\"\\n                          \" + _vm._s(item.name) + \"\\n                        \")]) : _c(\"span\", [_vm._v(_vm._s(item.name))])], 1), _vm._v(\" \"), _c(\"td\", [_c(\"div\", {\n      staticClass: \"input-group custom-qty-input\"\n    }, [_c(\"input\", {\n      staticClass: \"button-minus icon-shape icon-sm btn-danger\",\n      attrs: {\n        type: \"button\",\n        value: \"-\",\n        \"data-field\": \"quantity\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.generateItemTotal(item.qty, \"qty\", i - 1, \"decrement\");\n        }\n      }\n    }), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"quantity-field border-0 incrementor\",\n      attrs: {\n        type: \"number\",\n        step: \"any\",\n        id: \"Qty-\".concat(i),\n        name: \"quantity\",\n        required: \"\",\n        min: item.minQty,\n        max: item.itemType == \"product\" ? Number(item.inventoryCount) + Number(item.oldQty) : null,\n        placeholder: \"Quantity\"\n      },\n      domProps: {\n        value: item.qty\n      },\n      on: {\n        change: function change($event) {\n          return _vm.generateItemTotal($event.target.value, \"qty\", i - 1, \"\");\n        },\n        keyup: function keyup($event) {\n          return _vm.generateItemTotal($event.target.value, \"qty\", i - 1, \"\");\n        }\n      }\n    }), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"button-plus icon-shape icon-sm btn-primary\",\n      attrs: {\n        type: \"button\",\n        value: \"+\",\n        \"data-field\": \"quantity\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.generateItemTotal(item.qty, \"qty\", i - 1, \"increment\");\n        }\n      }\n    })])]), _vm._v(\" \"), _vm.form.totalInvoiceReturn > 0 ? _c(\"td\", [_vm._v(\"\\n                        \" + _vm._s(item.returnQty) + \"\\n                      \")]) : _vm._e(), _vm._v(\" \"), _c(\"td\", {\n      staticClass: \"text-center\"\n    }, [_c(\"div\", {\n      staticClass: \"input-group custom-qty-input\"\n    }, [_c(\"input\", {\n      staticClass: \"button-minus icon-shape icon-sm btn-danger\",\n      attrs: {\n        type: \"button\",\n        value: \"-\",\n        \"data-field\": \"unitPrice\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.generateItemTotal(item.unitPrice, \"price\", i - 1, \"decrement\");\n        }\n      }\n    }), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"quantity-field border-0 incrementor\",\n      attrs: {\n        type: \"number\",\n        step: \"any\",\n        id: \"unitPrice-\".concat(i),\n        name: \"unitPrice\",\n        required: \"\",\n        min: \"1\"\n      },\n      domProps: {\n        value: item.unitPrice\n      },\n      on: {\n        change: function change($event) {\n          return _vm.generateItemTotal($event.target.value, \"price\", i - 1, \"\");\n        },\n        keyup: function keyup($event) {\n          return _vm.generateItemTotal($event.target.value, \"price\", i - 1, \"\");\n        }\n      }\n    }), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"button-plus icon-shape icon-sm btn-primary\",\n      attrs: {\n        type: \"button\",\n        value: \"+\",\n        \"data-field\": \"unitPrice\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.generateItemTotal(item.unitPrice, \"price\", i - 1, \"increment\");\n        }\n      }\n    })])]), _vm._v(\" \"), _c(\"td\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(item.unitCost)))]), _vm._v(\" \"), _c(\"td\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(item.totalTax)))]), _vm._v(\" \"), _c(\"td\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(item.totalPrice)))]), _vm._v(\" \"), _c(\"td\", {\n      staticClass: \"text-right\"\n    }, [_c(\"button\", {\n      staticClass: \"btn btn-danger\",\n      attrs: {\n        type: \"button\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.removeItem(item);\n        }\n      }\n    }, [_c(\"i\", {\n      staticClass: \"fas fa-times\"\n    })])])]);\n  }), _vm._v(\" \"), _vm.form.subTotal ? _c(\"tr\", [_c(\"td\", {\n    staticClass: \"text-right\",\n    attrs: {\n      colspan: _vm.form.totalInvoiceReturn > 0 ? 7 : 6\n    }\n  }, [_c(\"strong\", [_vm._v(_vm._s(_vm.$t(\"Subtotal\")))])]), _vm._v(\" \"), _c(\"td\", [_c(\"strong\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(_vm.form.productTotalTax)))])]), _vm._v(\" \"), _c(\"td\", [_c(\"strong\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(_vm.form.subTotal)))])]), _vm._v(\" \"), _c(\"td\")]) : _vm._e()], 2)])])]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"discountType\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Discount Type\")))]), _vm._v(\" \"), _c(\"select\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.discountType,\n      expression: \"form.discountType\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"discountType\")\n    },\n    attrs: {\n      id: \"discountType\",\n      step: \"any\",\n      name: \"discountType\"\n    },\n    on: {\n      change: [function ($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.form, \"discountType\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }, _vm.calculateSum],\n      keyup: _vm.calculateSum\n    }\n  }, [_c(\"option\", {\n    attrs: {\n      value: \"0\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Fixed\")))]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"1\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Percentage\")) + \"(%)\")])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"discountType\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group\",\n    \"class\": _vm.form.discountType == 1 ? \"col-md-2\" : \"col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"discount\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Discount\")) + \"\\n                  \"), _vm.form.discountType == 1 ? _c(\"span\", [_vm._v(\"(%)\")]) : _vm._e()]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.discount,\n      expression: \"form.discount\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"discount\")\n    },\n    attrs: {\n      id: \"discount\",\n      type: \"number\",\n      step: \"any\",\n      min: \"1\",\n      max: _vm.form.discountType == 1 ? 100 : _vm.form.subTotal,\n      name: \"discount\",\n      placeholder: _vm.$t(\"Enter discount\")\n    },\n    domProps: {\n      value: _vm.form.discount\n    },\n    on: {\n      change: _vm.calculateSum,\n      keyup: _vm.calculateSum,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"discount\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"discount\"\n    }\n  })], 1), _vm._v(\" \"), _vm.form.discountType == 1 ? _c(\"div\", {\n    staticClass: \"form-group col-md-2\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"totalDiscount\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Total discount\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.totalDiscount,\n      expression: \"form.totalDiscount\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"totalDiscount\")\n    },\n    attrs: {\n      id: \"totalDiscount\",\n      type: \"number\",\n      step: \"any\",\n      name: \"totalDiscount\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.totalDiscount\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"totalDiscount\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"totalDiscount\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"transportCost\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Transport Cost\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.transportCost,\n      expression: \"form.transportCost\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"transportCost\")\n    },\n    attrs: {\n      id: \"transportCost\",\n      type: \"number\",\n      step: \"any\",\n      min: \"1\",\n      name: \"transportCost\",\n      placeholder: _vm.$t(\"Enter transport cost\")\n    },\n    domProps: {\n      value: _vm.form.transportCost\n    },\n    on: {\n      change: _vm.calculateSum,\n      keyup: _vm.calculateSum,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"transportCost\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"transportCost\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_vm.taxes ? _c(\"div\", {\n    staticClass: \"form-group col-md-6\",\n    \"class\": _vm.form.totalInvoiceReturn ? \"col-lg-3\" : \"col-lg-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"orderTax\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Invoice Tax\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"orderTax\")\n    },\n    attrs: {\n      options: _vm.taxes,\n      label: \"code\",\n      name: \"orderTax\",\n      placeholder: _vm.$t(\"Invoice Tax\")\n    },\n    on: {\n      input: _vm.calculateSum\n    },\n    model: {\n      value: _vm.form.orderTax,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"orderTax\", $$v);\n      },\n      expression: \"form.orderTax\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"orderTax\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _vm.taxes ? _c(\"div\", {\n    staticClass: \"form-group col-md-6\",\n    \"class\": _vm.form.totalInvoiceReturn ? \"col-lg-3\" : \"col-lg-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"totalTax\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Total Tax\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.totalTax,\n      expression: \"form.totalTax\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"totalTax\")\n    },\n    attrs: {\n      id: \"totalTax\",\n      type: \"text\",\n      name: \"totalTax\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.totalTax\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"totalTax\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"totalTax\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _vm.form.totalInvoiceReturn ? _c(\"div\", {\n    staticClass: \"form-group col-md-6\",\n    \"class\": _vm.form.totalInvoiceReturn ? \"col-lg-3\" : \"col-lg-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"totalInvoiceReturn\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Cost of Return Items\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.totalInvoiceReturn,\n      expression: \"form.totalInvoiceReturn\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"purchaseReturn\")\n    },\n    attrs: {\n      id: \"totalInvoiceReturn\",\n      type: \"number\",\n      step: \"any\",\n      name: \"totalInvoiceReturn\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.totalInvoiceReturn\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"totalInvoiceReturn\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"purchaseReturn\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\",\n    \"class\": _vm.form.totalInvoiceReturn ? \"col-lg-3\" : \"col-lg-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"netTotal\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Net Total\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.netTotal,\n      expression: \"form.netTotal\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"netTotal\")\n    },\n    attrs: {\n      id: \"netTotal\",\n      type: \"text\",\n      name: \"netTotal\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.netTotal\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"netTotal\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"netTotal\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"poReference\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"PO Reference\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.poReference,\n      expression: \"form.poReference\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"poReference\")\n    },\n    attrs: {\n      id: \"poReference\",\n      type: \"text\",\n      step: \"any\",\n      name: \"poReference\",\n      placeholder: _vm.$t(\"Enter PO reference\")\n    },\n    domProps: {\n      value: _vm.form.poReference\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"poReference\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"poReference\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"paymentTerms\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Payment Terms\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.paymentTerms,\n      expression: \"form.paymentTerms\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"paymentTerms\")\n    },\n    attrs: {\n      id: \"paymentTerms\",\n      type: \"text\",\n      name: \"paymentTerms\",\n      placeholder: _vm.$t(\"Enter payment terms\")\n    },\n    domProps: {\n      value: _vm.form.paymentTerms\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"paymentTerms\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"paymentTerms\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"deliveryPlace\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Delivery Place\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.deliveryPlace,\n      expression: \"form.deliveryPlace\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"deliveryPlace\")\n    },\n    attrs: {\n      id: \"deliveryPlace\",\n      type: \"text\",\n      name: \"deliveryPlace\",\n      placeholder: _vm.$t(\"Enter a delivery place\")\n    },\n    domProps: {\n      value: _vm.form.deliveryPlace\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"deliveryPlace\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"deliveryPlace\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"note\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Note\")))]), _vm._v(\" \"), _c(\"textarea\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.note,\n      expression: \"form.note\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"note\")\n    },\n    attrs: {\n      id: \"note\",\n      placeholder: _vm.$t(\"Write your note here!\")\n    },\n    domProps: {\n      value: _vm.form.note\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"note\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"note\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"date\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Date\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.date,\n      expression: \"form.date\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"date\")\n    },\n    attrs: {\n      id: \"date\",\n      type: \"date\",\n      name: \"date\"\n    },\n    domProps: {\n      value: _vm.form.date\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"date\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"date\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"status\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Status\")))]), _vm._v(\" \"), _c(\"select\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.status,\n      expression: \"form.status\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"status\")\n    },\n    attrs: {\n      id: \"status\"\n    },\n    on: {\n      change: function change($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.form, \"status\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }\n    }\n  }, [_c(\"option\", {\n    attrs: {\n      value: \"1\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Active\")))]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"0\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Inactive\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"status\"\n    }\n  })], 1)])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"card-footer\"\n  }, [_c(\"v-button\", {\n    staticClass: \"btn btn-primary\",\n    attrs: {\n      loading: _vm.form.busy\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-edit\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"Save changes\")) + \"\\n            \")]), _vm._v(\" \"), _c(\"button\", {\n    staticClass: \"btn btn-secondary float-right\",\n    attrs: {\n      type: \"reset\"\n    },\n    on: {\n      click: function click($event) {\n        return _vm.form.reset();\n      }\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-power-off\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"Reset\")) + \"\\n            \")])], 1)])])])])], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true\n");

/***/ }),

/***/ "./resources/js/pages/sales/invoices/edit.vue":
/*!****************************************************!*\
  !*** ./resources/js/pages/sales/invoices/edit.vue ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _edit_vue_vue_type_template_id_66516df7_scoped_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./edit.vue?vue&type=template&id=66516df7&scoped=true */ \"./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true\");\n/* harmony import */ var _edit_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./edit.vue?vue&type=script&lang=js */ \"./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _edit_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _edit_vue_vue_type_template_id_66516df7_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _edit_vue_vue_type_template_id_66516df7_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"66516df7\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"resources/js/pages/sales/invoices/edit.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvaW52b2ljZXMvZWRpdC52dWU/OTM4OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUE4RjtBQUN2QztBQUNMOzs7QUFHbEQ7QUFDbUc7QUFDbkcsZ0JBQWdCLDJHQUFVO0FBQzFCLEVBQUUseUVBQU07QUFDUixFQUFFLDBGQUFNO0FBQ1IsRUFBRSxtR0FBZTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLElBQUksS0FBVSxFQUFFLFlBaUJmO0FBQ0Q7QUFDZSxnRiIsImZpbGUiOiIuL3Jlc291cmNlcy9qcy9wYWdlcy9zYWxlcy9pbnZvaWNlcy9lZGl0LnZ1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vZWRpdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjY1MTZkZjcmc2NvcGVkPXRydWVcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9lZGl0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9lZGl0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI2NjUxNmRmN1wiLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIi9Vc2Vycy9tb2hhbWVkYWJkdWxrYWJpYS9EZXNrdG9wL0ZpbmFuY2UvZmluYWljZS9ub2RlX21vZHVsZXMvdnVlLWhvdC1yZWxvYWQtYXBpL2Rpc3QvaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCc2NjUxNmRmNycpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCc2NjUxNmRmNycsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCc2NjUxNmRmNycsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vZWRpdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjY1MTZkZjcmc2NvcGVkPXRydWVcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCc2NjUxNmRmNycsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicmVzb3VyY2VzL2pzL3BhZ2VzL3NhbGVzL2ludm9pY2VzL2VkaXQudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/pages/sales/invoices/edit.vue\n");

/***/ }),

/***/ "./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js":
/*!****************************************************************************!*\
  !*** ./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib??vue-loader-options!./edit.vue?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvaW52b2ljZXMvZWRpdC52dWU/NWViMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUEsd0NBQStMLENBQWdCLCtPQUFHLEVBQUMiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvaW52b2ljZXMvZWRpdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTQtMCEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2VkaXQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNC0wIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZWRpdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true":
/*!**********************************************************************************************!*\
  !*** ./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true ***!
  \**********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_template_id_66516df7_scoped_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib??vue-loader-options!./edit.vue?vue&type=template&id=66516df7&scoped=true */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_template_id_66516df7_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_template_id_66516df7_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvaW52b2ljZXMvZWRpdC52dWU/ZWYyOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvaW52b2ljZXMvZWRpdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjY1MTZkZjcmc2NvcGVkPXRydWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS00LTAhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3JlZi0tNiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2VkaXQudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTY2NTE2ZGY3JnNjb3BlZD10cnVlXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true\n");

/***/ })

}]);