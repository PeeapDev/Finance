(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[161],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/quotations/create.vue?vue&type=script&lang=js":
/*!****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/sales/quotations/create.vue?vue&type=script&lang=js ***!
  \****************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vform */ \"./node_modules/vform/dist/vform.es.js\");\n/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vuex */ \"./node_modules/vuex/dist/vuex.esm.js\");\n/* harmony import */ var vue_js_toggle_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vue-js-toggle-button */ \"./node_modules/vue-js-toggle-button/dist/index.js\");\n/* harmony import */ var vue_js_toggle_button__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(vue_js_toggle_button__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_3__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  middleware: [\"auth\", \"check-permissions\"],\n  metaInfo: function metaInfo() {\n    return {\n      title: this.$t(\"Create Quotation\")\n    };\n  },\n  components: {\n    ToggleButton: vue_js_toggle_button__WEBPACK_IMPORTED_MODULE_2__[\"ToggleButton\"]\n  },\n  data: function data() {\n    return {\n      breadcrumbsCurrent: \"Create Quotation\",\n      breadcrumbs: [{\n        name: \"Dashboard\",\n        url: \"home\"\n      }, {\n        name: \"Quotations\",\n        url: \"quotations.index\"\n      }, {\n        name: \"Create\",\n        url: \"\"\n      }],\n      form: new vform__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        client: \"\",\n        reference: \"\",\n        selectedProducts: [],\n        subTotal: 0,\n        netTotal: 0,\n        discountType: 0,\n        discount: \"\",\n        totalDiscount: \"\",\n        orderTax: \"\",\n        totalTax: 0,\n        productTotalTax: 0,\n        transportCost: \"\",\n        date: new Date().toISOString().slice(0, 10),\n        deliveryPlace: \"\",\n        note: \"\",\n        status: 1,\n        isSendEmail: false,\n        isSendSMS: false\n      }),\n      products: \"\",\n      taxes: \"\",\n      prefix: \"\",\n      isDemoMode: window.config.isDemoMode\n    };\n  },\n  computed: _objectSpread({}, Object(vuex__WEBPACK_IMPORTED_MODULE_1__[\"mapGetters\"])(\"operations\", [\"items\", \"appInfo\"])),\n  created: function created() {\n    this.getClients();\n    this.getProducts();\n    this.getTaxes();\n    this.prefix = this.appInfo.productPrefix;\n  },\n  methods: {\n    // get all clients\n    getClients: function getClients() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var defaultClientSlug;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.n = 1;\n              return _this.$store.dispatch(\"operations/allData\", {\n                path: \"/api/all-clients\"\n              });\n            case 1:\n              // assign default client\n              if (_this.items && _this.items.length > 0) {\n                defaultClientSlug = _this.appInfo.defaultClientSlug;\n                _this.form.client = _this.items.find(function (item) {\n                  return item.slug === defaultClientSlug;\n                });\n              }\n            case 2:\n              return _context.a(2);\n          }\n        }, _callee);\n      }))();\n    },\n    // get products\n    getProducts: function getProducts() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _yield$axios$get, data;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.n = 1;\n              return axios__WEBPACK_IMPORTED_MODULE_3___default.a.get(window.location.origin + \"/api/all-products\");\n            case 1:\n              _yield$axios$get = _context2.v;\n              data = _yield$axios$get.data;\n              _this2.products = data.data;\n              _this2.products.sort(_this2.sortProducts);\n            case 2:\n              return _context2.a(2);\n          }\n        }, _callee2);\n      }))();\n    },\n    // sort products\n    sortProducts: function sortProducts(a, b) {\n      if (Number(a.code) < Number(b.code)) {\n        return -1;\n      }\n      if (Number(a.code) > Number(b.code)) {\n        return 1;\n      }\n      return 0;\n    },\n    // get taxes\n    getTaxes: function getTaxes() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var _yield$axios$get2, data, defaultVatRateSlug;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _context3.n = 1;\n              return axios__WEBPACK_IMPORTED_MODULE_3___default.a.get(window.location.origin + \"/api/all-vat-rates\");\n            case 1:\n              _yield$axios$get2 = _context3.v;\n              data = _yield$axios$get2.data;\n              _this3.taxes = data.data;\n              // assign default vat rate\n              if (_this3.taxes && _this3.taxes.length > 0) {\n                defaultVatRateSlug = _this3.appInfo.defaultVatRateSlug;\n                _this3.form.orderTax = _this3.taxes.find(function (tax) {\n                  return tax.slug === defaultVatRateSlug;\n                });\n              }\n              _this3.calculateSum();\n            case 2:\n              return _context3.a(2);\n          }\n        }, _callee3);\n      }))();\n    },\n    // store item in array\n    storeProduct: function storeProduct(product) {\n      var index = this.form.selectedProducts.findIndex(function (x) {\n        return x.id == product.id;\n      });\n      var quantity = 1;\n      if (index === -1) {\n        var productTax = product.taxType == \"Exclusive\" ? product.priceWithDiscount * (product.taxRate / 100) : product.priceWithDiscount - product.priceWithDiscount / (1 + product.taxRate / 100);\n        var totalTax = productTax * quantity;\n        this.form.selectedProducts.unshift({\n          id: product.id,\n          slug: product.slug,\n          name: product.name,\n          code: product.code,\n          taxType: product.taxType,\n          taxRate: product.taxRate,\n          qty: quantity,\n          avgPurchasePrice: product.avgPurchasePrice,\n          unitPrice: product.priceWithDiscount,\n          unitCost: product.taxType == \"Exclusive\" ? product.priceWithDiscount + productTax : product.priceWithDiscount,\n          totalPrice: product.taxType == \"Exclusive\" ? 1 * (product.priceWithDiscount + totalTax) : 1 * product.priceWithDiscount,\n          productTax: product.productTax,\n          totalTax: totalTax\n        });\n      }\n      this.generateItemTotal(quantity, \"qty\", index, \"\");\n      return;\n    },\n    // update array\n    generateItemTotal: function generateItemTotal(value, type, index, action) {\n      var item = this.form.selectedProducts[index];\n      if (item) {\n        if (type == \"qty\") {\n          item.qty = value;\n          if (action == \"increment\") {\n            item.qty = Number(item.qty) + 1;\n          } else if (action == \"decrement\") {\n            if (item.qty > 0) {\n              item.qty = Number(item.qty) - 1;\n            }\n          }\n        } else {\n          item.unitPrice = value;\n          if (action == \"increment\") {\n            item.unitPrice = Number(item.unitPrice) + 1;\n          } else if (action == \"decrement\") {\n            if (item.unitPrice > 0) {\n              item.unitPrice = Number(item.unitPrice) - 1;\n            }\n          }\n        }\n        item.productTax = item.taxType == \"Exclusive\" ? item.unitPrice * (item.taxRate / 100) : item.unitPrice - item.unitPrice / (1 + item.taxRate / 100);\n        item.totalTax = item.productTax * item.qty;\n        item.totalPrice = item.taxType == \"Exclusive\" ? item.qty * item.unitPrice + item.totalTax : item.qty * item.unitPrice;\n        item.unitCost = item.taxType == \"Exclusive\" ? Number(item.unitPrice) + Number(item.productTax) : item.unitPrice;\n        this.form.selectedProducts[index] = item;\n      }\n      this.calculateSum();\n      return;\n    },\n    // remove item from array\n    removeItem: function removeItem(item) {\n      var index = this.form.selectedProducts.indexOf(item);\n      if (index > -1) {\n        this.form.selectedProducts.splice(index, 1);\n      }\n      this.calculateSum();\n      return;\n    },\n    // calculate sum\n    calculateSum: function calculateSum() {\n      // calculate subtotal\n      this.form.subTotal = this.form.selectedProducts.reduce(function (prev, cur) {\n        return Number((prev + cur.totalPrice).toFixed(2));\n      }, 0);\n\n      // calculate product tax\n      this.form.productTotalTax = this.form.selectedProducts.reduce(function (prev, cur) {\n        return Number((prev + cur.totalTax).toFixed(2));\n      }, 0);\n      this.form.netTotal = this.form.subTotal;\n\n      // calculate quotation tax\n      this.form.totalTax = 0;\n      if (this.form.orderTax && this.form.netTotal > 0) {\n        this.form.totalTax = this.form.orderTax.rate / 100 * this.form.subTotal;\n      }\n\n      // calculate discount and total\n      if (this.form.subTotal > 0) {\n        var discount = Number(this.form.discount);\n        if (this.form.discountType == 1) {\n          discount = discount / 100 * this.form.subTotal;\n          this.form.totalDiscount = Number(discount.toFixed(2));\n        } else {\n          discount = Number(this.form.discount);\n        }\n        this.form.netTotal = this.form.subTotal + Number(this.form.transportCost) - discount + this.form.totalTax;\n      }\n      return;\n    },\n    // save quotation\n    saveQuotation: function saveQuotation() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              _context4.n = 1;\n              return _this4.form.post(window.location.origin + \"/api/quotations\").then(function (_ref) {\n                var data = _ref.data;\n                toast.fire({\n                  type: \"success\",\n                  title: _this4.$t(\"Quotation added successfully\")\n                });\n                _this4.$router.push({\n                  name: \"quotations.show\",\n                  params: {\n                    slug: data.data.slug\n                  }\n                });\n              })[\"catch\"](function () {\n                toast.fire({\n                  type: \"error\",\n                  title: _this4.$t(\"Opps...something went wrong\")\n                });\n              });\n            case 1:\n              return _context4.a(2);\n          }\n        }, _callee4);\n      }))();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/quotations/create.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/quotations/create.vue?vue&type=template&id=e93a20f0&scoped=true":
/*!**************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/sales/quotations/create.vue?vue&type=template&id=e93a20f0&scoped=true ***!
  \**************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", [_c(\"breadcrumbs\", {\n    attrs: {\n      items: _vm.breadcrumbs,\n      current: _vm.breadcrumbsCurrent\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"col-lg-12 col-xl-12\"\n  }, [_c(\"div\", {\n    staticClass: \"card\"\n  }, [_c(\"div\", {\n    staticClass: \"card-header\"\n  }, [_c(\"h3\", {\n    staticClass: \"card-title\"\n  }, [_vm._v(\"\\n            \" + _vm._s(_vm.$t(\"Create quotation\")) + \"\\n          \")]), _vm._v(\" \"), _c(\"router-link\", {\n    staticClass: \"btn btn-dark float-right\",\n    attrs: {\n      to: {\n        name: \"quotations.index\"\n      }\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-long-arrow-alt-left\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"Back\")) + \"\\n          \")])], 1), _vm._v(\" \"), _c(\"form\", {\n    attrs: {\n      role: \"form\"\n    },\n    on: {\n      submit: function submit($event) {\n        $event.preventDefault();\n        return _vm.saveQuotation.apply(null, arguments);\n      },\n      keydown: function keydown($event) {\n        return _vm.form.onKeydown($event);\n      }\n    }\n  }, [_c(\"div\", {\n    staticClass: \"card-body\"\n  }, [_vm.items ? _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"client\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Client\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"client\")\n    },\n    attrs: {\n      options: _vm.items,\n      label: \"name\",\n      name: \"client\",\n      placeholder: _vm.$t(\"Select a client\")\n    },\n    model: {\n      value: _vm.form.client,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"client\", $$v);\n      },\n      expression: \"form.client\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"client\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"reference\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Reference\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.reference,\n      expression: \"form.reference\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"reference\")\n    },\n    attrs: {\n      id: \"reference\",\n      type: \"text\",\n      name: \"reference\",\n      placeholder: _vm.$t(\"Enter reference\")\n    },\n    domProps: {\n      value: _vm.form.reference\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"reference\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"reference\"\n    }\n  })], 1)]) : _vm._e(), _vm._v(\" \"), _vm.products ? _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-12\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"product\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Select Items\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"selectedProducts\")\n    },\n    attrs: {\n      options: _vm.products,\n      label: \"label\",\n      name: \"product\",\n      placeholder: _vm.$t(\"Search Items\")\n    },\n    on: {\n      input: function input($event) {\n        return _vm.storeProduct(_vm.form.product);\n      }\n    },\n    model: {\n      value: _vm.form.product,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"product\", $$v);\n      },\n      expression: \"form.product\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"selectedProducts\"\n    }\n  })], 1)]) : _vm._e(), _vm._v(\" \"), _vm.form.selectedProducts && _vm.form.selectedProducts.length > 0 ? _c(\"div\", {\n    staticClass: \"row mt-3 mb-4\"\n  }, [_c(\"div\", {\n    staticClass: \"table-responsive table-custom w-95 m-auto\"\n  }, [_c(\"table\", {\n    staticClass: \"table table-hover table-sm text-center\"\n  }, [_c(\"thead\", [_c(\"tr\", [_c(\"th\", [_vm._v(_vm._s(_vm.$t(\"SL\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Code\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Item Name\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Quantity\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Price\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Unit Cost\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Tax\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"Subtotal\")))]), _vm._v(\" \"), _c(\"th\", {\n    staticClass: \"text-right\"\n  }, [_vm._v(_vm._s(_vm.$t(\"Action\")))])])]), _vm._v(\" \"), _c(\"tbody\", [_vm._l(_vm.form.selectedProducts, function (item, i) {\n    return _c(\"tr\", {\n      key: i\n    }, [_c(\"td\", [_vm._v(_vm._s(++i))]), _vm._v(\" \"), _c(\"td\", [_vm._v(_vm._s(_vm._f(\"withPrefix\")(item.code, _vm.prefix)))]), _vm._v(\" \"), _c(\"td\", [_vm.$can(\"product-view\") ? _c(\"router-link\", {\n      attrs: {\n        to: {\n          name: \"products.show\",\n          params: {\n            slug: item.slug\n          }\n        }\n      }\n    }, [_vm._v(\"\\n                          \" + _vm._s(item.name) + \"\\n                        \")]) : _c(\"span\", [_vm._v(_vm._s(item.name))])], 1), _vm._v(\" \"), _c(\"td\", [_c(\"div\", {\n      staticClass: \"input-group custom-qty-input\"\n    }, [_c(\"input\", {\n      staticClass: \"button-minus icon-shape icon-sm btn-danger\",\n      attrs: {\n        type: \"button\",\n        value: \"-\",\n        \"data-field\": \"quantity\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.generateItemTotal(item.qty, \"qty\", i - 1, \"decrement\");\n        }\n      }\n    }), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"quantity-field border-0 incrementor\",\n      attrs: {\n        type: \"number\",\n        step: \"any\",\n        min: \"0\",\n        id: \"Qty-\".concat(i),\n        name: \"quantity\",\n        required: \"\",\n        placeholder: _vm.$t(\"Quantity\")\n      },\n      domProps: {\n        value: item.qty\n      },\n      on: {\n        change: function change($event) {\n          return _vm.generateItemTotal($event.target.value, \"qty\", i - 1, \"\");\n        },\n        keyup: function keyup($event) {\n          return _vm.generateItemTotal($event.target.value, \"qty\", i - 1, \"\");\n        }\n      }\n    }), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"button-plus icon-shape icon-sm btn-primary\",\n      attrs: {\n        type: \"button\",\n        value: \"+\",\n        \"data-field\": \"quantity\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.generateItemTotal(item.qty, \"qty\", i - 1, \"increment\");\n        }\n      }\n    })])]), _vm._v(\" \"), _c(\"td\", [_c(\"div\", {\n      staticClass: \"input-group custom-qty-input\"\n    }, [_c(\"input\", {\n      staticClass: \"button-minus icon-shape icon-sm btn-danger\",\n      attrs: {\n        type: \"button\",\n        value: \"-\",\n        \"data-field\": \"quantity\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.generateItemTotal(item.unitPrice, \"price\", i - 1, \"decrement\");\n        }\n      }\n    }), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"quantity-field border-0 incrementor\",\n      attrs: {\n        type: \"number\",\n        step: \"any\",\n        min: \"0\",\n        id: \"unitPrice-\".concat(i),\n        name: \"unitPrice\",\n        required: \"\"\n      },\n      domProps: {\n        value: item.unitPrice\n      },\n      on: {\n        change: function change($event) {\n          return _vm.generateItemTotal($event.target.value, \"price\", i - 1, \"\");\n        },\n        keyup: function keyup($event) {\n          return _vm.generateItemTotal($event.target.value, \"price\", i - 1, \"\");\n        }\n      }\n    }), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"button-plus icon-shape icon-sm btn-primary\",\n      attrs: {\n        type: \"button\",\n        value: \"+\",\n        \"data-field\": \"quantity\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.generateItemTotal(item.unitPrice, \"price\", i - 1, \"increment\");\n        }\n      }\n    })])]), _vm._v(\" \"), _c(\"td\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(item.unitCost)))]), _vm._v(\" \"), _c(\"td\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(item.totalTax)))]), _vm._v(\" \"), _c(\"td\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(item.totalPrice)))]), _vm._v(\" \"), _c(\"td\", {\n      staticClass: \"text-right\"\n    }, [_c(\"button\", {\n      staticClass: \"btn btn-danger\",\n      attrs: {\n        type: \"button\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.removeItem(item);\n        }\n      }\n    }, [_c(\"i\", {\n      staticClass: \"fas fa-times\"\n    })])])]);\n  }), _vm._v(\" \"), _c(\"tr\", [_c(\"td\", {\n    staticClass: \"text-right\",\n    attrs: {\n      colspan: \"6\"\n    }\n  }, [_c(\"strong\", [_vm._v(_vm._s(_vm.$t(\"Subtotal\")))])]), _vm._v(\" \"), _c(\"td\", [_c(\"strong\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(_vm.form.productTotalTax)))])]), _vm._v(\" \"), _c(\"td\", [_c(\"strong\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(_vm.form.subTotal)))])]), _vm._v(\" \"), _c(\"td\")])], 2)])])]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"discountType\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Discount Type\")))]), _vm._v(\" \"), _c(\"select\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.discountType,\n      expression: \"form.discountType\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"discountType\")\n    },\n    attrs: {\n      id: \"discountType\",\n      step: \"any\",\n      name: \"discountType\"\n    },\n    on: {\n      change: [function ($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.form, \"discountType\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }, _vm.calculateSum],\n      keyup: _vm.calculateSum\n    }\n  }, [_c(\"option\", {\n    attrs: {\n      value: \"0\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Fixed\")))]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"1\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Percentage\")) + \"(%)\")])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"discountType\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group\",\n    \"class\": _vm.form.discountType == 1 ? \"col-md-2\" : \"col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"discount\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Discount\")) + \"\\n                  \"), _vm.form.discountType == 1 ? _c(\"span\", [_vm._v(\"(%)\")]) : _vm._e()]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.discount,\n      expression: \"form.discount\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"discount\")\n    },\n    attrs: {\n      id: \"discount\",\n      type: \"number\",\n      step: \"any\",\n      min: \"1\",\n      max: _vm.form.discountType == 1 ? 100 : _vm.form.netTotal,\n      name: \"discount\",\n      placeholder: _vm.$t(\"Enter discount\")\n    },\n    domProps: {\n      value: _vm.form.discount\n    },\n    on: {\n      change: _vm.calculateSum,\n      keyup: _vm.calculateSum,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"discount\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"discount\"\n    }\n  })], 1), _vm._v(\" \"), _vm.form.discountType == 1 ? _c(\"div\", {\n    staticClass: \"form-group col-md-2\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"totalDiscount\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Total discount\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.totalDiscount,\n      expression: \"form.totalDiscount\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"totalDiscount\")\n    },\n    attrs: {\n      id: \"totalDiscount\",\n      type: \"number\",\n      step: \"any\",\n      name: \"totalDiscount\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.totalDiscount\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"totalDiscount\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"totalDiscount\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"transportCost\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Transport Cost\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.transportCost,\n      expression: \"form.transportCost\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"transportCost\")\n    },\n    attrs: {\n      id: \"transportCost\",\n      type: \"number\",\n      step: \"any\",\n      min: \"1\",\n      name: \"transportCost\",\n      placeholder: _vm.$t(\"Enter transport cost\")\n    },\n    domProps: {\n      value: _vm.form.transportCost\n    },\n    on: {\n      change: _vm.calculateSum,\n      keyup: _vm.calculateSum,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"transportCost\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"transportCost\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_vm.taxes ? _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"orderTax\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Quotation Tax\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"orderTax\")\n    },\n    attrs: {\n      options: _vm.taxes,\n      label: \"code\",\n      name: \"orderTax\",\n      placeholder: _vm.$t(\"Select a tax type\")\n    },\n    on: {\n      input: _vm.calculateSum\n    },\n    model: {\n      value: _vm.form.orderTax,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"orderTax\", $$v);\n      },\n      expression: \"form.orderTax\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"orderTax\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _vm.taxes ? _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"totalTax\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Total Tax\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.totalTax,\n      expression: \"form.totalTax\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"totalTax\")\n    },\n    attrs: {\n      id: \"totalTax\",\n      type: \"text\",\n      name: \"totalTax\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.totalTax\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"totalTax\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"totalTax\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"netTotal\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Net Total\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.netTotal,\n      expression: \"form.netTotal\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"netTotal\")\n    },\n    attrs: {\n      id: \"netTotal\",\n      type: \"number\",\n      step: \"any\",\n      name: \"netTotal\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.netTotal\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"netTotal\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"netTotal\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"deliveryPlace\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Delivery Place\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.deliveryPlace,\n      expression: \"form.deliveryPlace\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"deliveryPlace\")\n    },\n    attrs: {\n      id: \"deliveryPlace\",\n      type: \"text\",\n      name: \"deliveryPlace\",\n      placeholder: _vm.$t(\"Enter a delivery place\")\n    },\n    domProps: {\n      value: _vm.form.deliveryPlace\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"deliveryPlace\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"deliveryPlace\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"date\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Date\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.date,\n      expression: \"form.date\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"date\")\n    },\n    attrs: {\n      id: \"date\",\n      type: \"date\",\n      name: \"date\"\n    },\n    domProps: {\n      value: _vm.form.date\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"date\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"date\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"status\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Status\")))]), _vm._v(\" \"), _c(\"select\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.status,\n      expression: \"form.status\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"status\")\n    },\n    attrs: {\n      id: \"status\"\n    },\n    on: {\n      change: function change($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.form, \"status\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }\n    }\n  }, [_c(\"option\", {\n    attrs: {\n      value: \"1\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Active\")))]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"0\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Inactive\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"status\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"note\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"Note\")))]), _vm._v(\" \"), _c(\"textarea\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.note,\n      expression: \"form.note\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"note\")\n    },\n    attrs: {\n      id: \"note\",\n      placeholder: _vm.$t(\"Write your note here!\")\n    },\n    domProps: {\n      value: _vm.form.note\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"note\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"note\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-12 d-flex flex-wrap\"\n  }, [_c(\"div\", {\n    staticClass: \"pr-5\"\n  }, [_c(\"toggle-button\", {\n    attrs: {\n      disabled: _vm.isDemoMode\n    },\n    model: {\n      value: _vm.form.isSendEmail,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"isSendEmail\", $$v);\n      },\n      expression: \"form.isSendEmail\"\n    }\n  }), _vm._v(\"\\n                \" + _vm._s(_vm.$t(\"Send To Email\")) + \"\\n              \")], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-12 d-flex flex-wrap\"\n  }, [_c(\"div\", {\n    staticClass: \"pr-5\"\n  }, [_c(\"toggle-button\", {\n    attrs: {\n      disabled: _vm.isDemoMode\n    },\n    model: {\n      value: _vm.form.isSendSMS,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"isSendSMS\", $$v);\n      },\n      expression: \"form.isSendSMS\"\n    }\n  }), _vm._v(\"\\n                \" + _vm._s(_vm.$t(\"Send To SMS\")) + \"\\n              \")], 1)])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"card-footer\"\n  }, [_c(\"v-button\", {\n    staticClass: \"btn btn-primary\",\n    attrs: {\n      loading: _vm.form.busy\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-save\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"Save\")) + \"\\n            \")]), _vm._v(\" \"), _c(\"button\", {\n    staticClass: \"btn btn-secondary float-right\",\n    attrs: {\n      type: \"reset\"\n    },\n    on: {\n      click: function click($event) {\n        return _vm.form.reset();\n      }\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-power-off\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"Reset\")) + \"\\n            \")])], 1)])])])])], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/quotations/create.vue?vue&type=template&id=e93a20f0&scoped=true\n");

/***/ }),

/***/ "./resources/js/pages/sales/quotations/create.vue":
/*!********************************************************!*\
  !*** ./resources/js/pages/sales/quotations/create.vue ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _create_vue_vue_type_template_id_e93a20f0_scoped_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create.vue?vue&type=template&id=e93a20f0&scoped=true */ \"./resources/js/pages/sales/quotations/create.vue?vue&type=template&id=e93a20f0&scoped=true\");\n/* harmony import */ var _create_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create.vue?vue&type=script&lang=js */ \"./resources/js/pages/sales/quotations/create.vue?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _create_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _create_vue_vue_type_template_id_e93a20f0_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _create_vue_vue_type_template_id_e93a20f0_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"e93a20f0\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"resources/js/pages/sales/quotations/create.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvcXVvdGF0aW9ucy9jcmVhdGUudnVlPzE3N2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBZ0c7QUFDdkM7QUFDTDs7O0FBR3BEO0FBQ21HO0FBQ25HLGdCQUFnQiwyR0FBVTtBQUMxQixFQUFFLDJFQUFNO0FBQ1IsRUFBRSw0RkFBTTtBQUNSLEVBQUUscUdBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxJQUFJLEtBQVUsRUFBRSxZQWlCZjtBQUNEO0FBQ2UsZ0YiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvcXVvdGF0aW9ucy9jcmVhdGUudnVlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9jcmVhdGUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWU5M2EyMGYwJnNjb3BlZD10cnVlXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vY3JlYXRlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9jcmVhdGUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcImU5M2EyMGYwXCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiL1VzZXJzL21vaGFtZWRhYmR1bGthYmlhL0Rlc2t0b3AvRmluYW5jZS9maW5haWNlL25vZGVfbW9kdWxlcy92dWUtaG90LXJlbG9hZC1hcGkvZGlzdC9pbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJ2U5M2EyMGYwJykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJ2U5M2EyMGYwJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJ2U5M2EyMGYwJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9jcmVhdGUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWU5M2EyMGYwJnNjb3BlZD10cnVlXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignZTkzYTIwZjAnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInJlc291cmNlcy9qcy9wYWdlcy9zYWxlcy9xdW90YXRpb25zL2NyZWF0ZS52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/pages/sales/quotations/create.vue\n");

/***/ }),

/***/ "./resources/js/pages/sales/quotations/create.vue?vue&type=script&lang=js":
/*!********************************************************************************!*\
  !*** ./resources/js/pages/sales/quotations/create.vue?vue&type=script&lang=js ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib??vue-loader-options!./create.vue?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/quotations/create.vue?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvcXVvdGF0aW9ucy9jcmVhdGUudnVlP2ZhNjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBLHdDQUFpTSxDQUFnQixpUEFBRyxFQUFDIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL3BhZ2VzL3NhbGVzL3F1b3RhdGlvbnMvY3JlYXRlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNC0wIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vY3JlYXRlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTQtMCEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2NyZWF0ZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/pages/sales/quotations/create.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./resources/js/pages/sales/quotations/create.vue?vue&type=template&id=e93a20f0&scoped=true":
/*!**************************************************************************************************!*\
  !*** ./resources/js/pages/sales/quotations/create.vue?vue&type=template&id=e93a20f0&scoped=true ***!
  \**************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_template_id_e93a20f0_scoped_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib??vue-loader-options!./create.vue?vue&type=template&id=e93a20f0&scoped=true */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/quotations/create.vue?vue&type=template&id=e93a20f0&scoped=true\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_template_id_e93a20f0_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_template_id_e93a20f0_scoped_true__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvcXVvdGF0aW9ucy9jcmVhdGUudnVlP2E0YmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL3BhZ2VzL3NhbGVzL3F1b3RhdGlvbnMvY3JlYXRlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1lOTNhMjBmMCZzY29wZWQ9dHJ1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTQtMCEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/cmVmLS02IS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vY3JlYXRlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1lOTNhMjBmMCZzY29wZWQ9dHJ1ZVwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/pages/sales/quotations/create.vue?vue&type=template&id=e93a20f0&scoped=true\n");

/***/ })

}]);